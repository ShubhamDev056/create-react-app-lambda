[{"D:\\xampp\\htdocs\\react-zip\\react-zip\\src\\index.js":"1","D:\\xampp\\htdocs\\react-zip\\react-zip\\src\\App.js":"2","D:\\xampp\\htdocs\\react-zip\\react-zip\\src\\reportWebVitals.js":"3","D:\\xampp\\htdocs\\react-zip\\react-zip\\src\\pages\\TherapistRegistration.js":"4","D:\\xampp\\htdocs\\react-zip\\react-zip\\src\\components\\partials\\Header.js":"5","D:\\xampp\\htdocs\\react-zip\\react-zip\\src\\components\\partials\\Footer.js":"6","D:\\xampp\\htdocs\\react-zip\\react-zip\\src\\pages\\Success.js":"7","D:\\xampp\\htdocs\\property-app\\front-app\\src\\index.js":"8","D:\\xampp\\htdocs\\property-app\\front-app\\src\\App.js":"9","D:\\xampp\\htdocs\\property-app\\front-app\\src\\reportWebVitals.js":"10","D:\\xampp\\htdocs\\property-app\\front-app\\src\\pages\\TherapistRegistration.js":"11","D:\\xampp\\htdocs\\property-app\\front-app\\src\\components\\partials\\Header.js":"12","D:\\xampp\\htdocs\\property-app\\front-app\\src\\components\\partials\\Footer.js":"13","D:\\xampp\\htdocs\\property-app\\front-app\\src\\pages\\Register.js":"14","D:\\xampp\\htdocs\\property-app\\front-app\\src\\pages\\Login.js":"15","D:\\xampp\\htdocs\\property-app\\front-app\\src\\pages\\ForgotPassword.js":"16","D:\\xampp\\htdocs\\property-app\\front-app\\src\\app\\store.js":"17","D:\\xampp\\htdocs\\property-app\\front-app\\src\\features\\userSlice.js":"18","D:\\xampp\\htdocs\\property-app\\front-app\\src\\pages\\Logout.js":"19","D:\\xampp\\htdocs\\property-app\\front-app\\src\\store.js":"20","D:\\xampp\\htdocs\\property-app\\front-app\\src\\actions\\authActions.js":"21","D:\\xampp\\htdocs\\property-app\\front-app\\src\\actions\\types.js":"22","D:\\xampp\\htdocs\\property-app\\front-app\\src\\reducers\\index.js":"23","D:\\xampp\\htdocs\\property-app\\front-app\\src\\utils\\setAuthToken.js":"24","D:\\xampp\\htdocs\\property-app\\front-app\\src\\reducers\\authReducers.js":"25","D:\\xampp\\htdocs\\property-app\\front-app\\src\\pages\\Dashboard.js":"26","D:\\xampp\\htdocs\\property-app\\front-app\\src\\components\\PrivateRoute.js":"27","D:\\xampp\\htdocs\\property-app\\front-app\\src\\pages\\ResetPassword.js":"28","D:\\xampp\\htdocs\\property-app\\front-app\\src\\components\\partials\\Sidebar.js":"29","D:\\xampp\\htdocs\\property-app\\front-app\\src\\pages\\Profile.js":"30","D:\\xampp\\htdocs\\property-app\\front-app\\src\\pages\\Mylookup.js":"31","D:\\xampp\\htdocs\\property-app\\front-app\\src\\pages\\EnterOtp.js":"32","D:\\xampp\\htdocs\\property-app\\front-app\\src\\pages\\AddEditLookups.js":"33","D:\\xampp\\htdocs\\property-app\\front-app\\src\\pages\\LoginDesign.js":"34","D:\\xampp\\htdocs\\property-app\\front-app\\src\\pages\\Lookups.js":"35","D:\\xampp\\htdocs\\property-app\\front-app\\src\\pages\\ChangePassword.js":"36","D:\\xampp\\htdocs\\property-app\\front-app\\src\\pages\\DoAlookup.js":"37","D:\\xampp\\htdocs\\property-app\\front-app\\src\\pages\\WorldTable .js":"38"},{"size":536,"mtime":1606898471440,"results":"39","hashOfConfig":"40"},{"size":803,"mtime":1606920935157,"results":"41","hashOfConfig":"40"},{"size":362,"mtime":1606894856000,"results":"42","hashOfConfig":"40"},{"size":17608,"mtime":1606992555420,"results":"43","hashOfConfig":"40"},{"size":744,"mtime":1606922501825,"results":"44","hashOfConfig":"40"},{"size":839,"mtime":1606900136844,"results":"45","hashOfConfig":"40"},{"size":804,"mtime":1606922686109,"results":"46","hashOfConfig":"40"},{"size":541,"mtime":1607616581000,"results":"47","hashOfConfig":"48"},{"size":2688,"mtime":1608215020859,"results":"49","hashOfConfig":"48"},{"size":362,"mtime":1606894856000,"results":"50","hashOfConfig":"48"},{"size":17608,"mtime":1607513627542,"results":"51","hashOfConfig":"48"},{"size":1258,"mtime":1607942522274,"results":"52","hashOfConfig":"48"},{"size":427,"mtime":1607503639968,"results":"53","hashOfConfig":"48"},{"size":11882,"mtime":1608212777885,"results":"54","hashOfConfig":"48"},{"size":9771,"mtime":1608212792924,"results":"55","hashOfConfig":"48"},{"size":4812,"mtime":1607958554668,"results":"56","hashOfConfig":"48"},{"size":186,"mtime":1607589349577,"results":"57","hashOfConfig":"48"},{"size":485,"mtime":1607592148566,"results":"58","hashOfConfig":"48"},{"size":796,"mtime":1607942306944,"results":"59","hashOfConfig":"48"},{"size":416,"mtime":1607595272598,"results":"60","hashOfConfig":"48"},{"size":1751,"mtime":1607596243143,"results":"61","hashOfConfig":"48"},{"size":137,"mtime":1607595041257,"results":"62","hashOfConfig":"48"},{"size":242,"mtime":1607598210034,"results":"63","hashOfConfig":"48"},{"size":338,"mtime":1607596199324,"results":"64","hashOfConfig":"48"},{"size":633,"mtime":1607598039577,"results":"65","hashOfConfig":"48"},{"size":9697,"mtime":1607675664184,"results":"66","hashOfConfig":"48"},{"size":607,"mtime":1607595800327,"results":"67","hashOfConfig":"48"},{"size":5980,"mtime":1607709724059,"results":"68","hashOfConfig":"48"},{"size":10068,"mtime":1608048151878,"results":"69","hashOfConfig":"48"},{"size":17829,"mtime":1607962338969,"results":"70","hashOfConfig":"48"},{"size":6194,"mtime":1608043074984,"results":"71","hashOfConfig":"48"},{"size":4467,"mtime":1608212802968,"results":"72","hashOfConfig":"48"},{"size":26225,"mtime":1608212720031,"results":"73","hashOfConfig":"48"},{"size":7357,"mtime":1607962265266,"results":"74","hashOfConfig":"48"},{"size":5553,"mtime":1608046859445,"results":"75","hashOfConfig":"48"},{"size":10742,"mtime":1608047395538,"results":"76","hashOfConfig":"48"},{"size":20669,"mtime":1608212817183,"results":"77","hashOfConfig":"48"},{"size":7377,"mtime":1608212764816,"results":"78","hashOfConfig":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},"3i21g2",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"81"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"81"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"81"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"l7z9wq",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"100"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"100"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"100"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"100"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"100"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"100"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"100"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"100"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"111"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"100"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"100"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"D:\\xampp\\htdocs\\react-zip\\react-zip\\src\\index.js",[],["175","176"],"D:\\xampp\\htdocs\\react-zip\\react-zip\\src\\App.js",[],"D:\\xampp\\htdocs\\react-zip\\react-zip\\src\\reportWebVitals.js",[],"D:\\xampp\\htdocs\\react-zip\\react-zip\\src\\pages\\TherapistRegistration.js",["177","178","179"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from 'react-router'\r\nimport SignatureCanvas from 'react-signature-canvas';\r\n\r\n\r\nexport default class TherapistRegistration extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      page: props.page,\r\n      submitting: false,\r\n      submitted: false,\r\n      failedSubmit: false,\r\n      buttonText:\"Submit\",\r\n      fields: {},\r\n      errors: {},\r\n      redirectToSuccess: false\r\n    };\r\n  }\r\n  //--------- Apply validations on fields -----------\r\n  handleValidation(){\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n//First Name\r\n    if(!fields[\"first_name\"]){\r\n       formIsValid = false;\r\n       errors[\"first_name\"] = \"First name is required.\";\r\n    }\r\n    //Last Name\r\n    if(!fields[\"last_name\"]){\r\n      formIsValid = false;\r\n      errors[\"last_name\"] = \"Last name is required.\";\r\n   }\r\n  //License\r\n  if(!fields[\"license_number\"]){\r\n    formIsValid = false;\r\n    errors[\"license_number\"] = \"License is required.\";\r\n }\r\n //License Type\r\n if(!fields[\"license_type\"]){\r\n  formIsValid = false;\r\n  errors[\"license_type\"] = \"License type is required.\";\r\n}\r\n//Contact\r\nif(!fields[\"phone_number\"]){\r\n  formIsValid = false;\r\n  errors[\"phone_number\"] = \"Phone number is required.\";\r\n}\r\n//Email\r\nif(!fields[\"email\"]){\r\n    formIsValid = false;\r\n    errors[\"email\"] = \"Email address is required.\";\r\n}\r\nif(typeof fields[\"email\"] !== \"undefined\"){\r\n    let lastAtPos = fields[\"email\"].lastIndexOf('@');\r\n    let lastDotPos = fields[\"email\"].lastIndexOf('.');\r\n\r\n    if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') == -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\r\n      formIsValid = false;\r\n      errors[\"email\"] = \"Please enter valid email address.\";\r\n    }\r\n}\r\n//Contact\r\nif(!fields[\"practice_name\"]){\r\n  formIsValid = false;\r\n  errors[\"practice_name\"] = \"Practice Name is required.\";\r\n}\r\n//State\r\nif(!fields[\"state\"]){\r\n  formIsValid = false;\r\n  errors[\"state\"] = \"State is required.\";\r\n} \r\n//Address\r\nif(!fields[\"address\"]){\r\n  formIsValid = false;\r\n  errors[\"address\"] = \"Address is required.\";\r\n}    \r\nif(typeof fields[\"address\"] !== \"undefined\"){\r\n  if(!fields[\"address\"].match(/^[a-zA-Z]+$/)){\r\n     formIsValid = false;\r\n     errors[\"address\"] = \"Only letters\";\r\n  }        \r\n}\r\n//City\r\nif(!fields[\"city\"]){\r\n  formIsValid = false;\r\n  errors[\"city\"] = \"City is required.\";\r\n} \r\n//Zip Code\r\nif(!fields[\"zip\"]){\r\n  formIsValid = false;\r\n  errors[\"zip\"] = \"Zip Code is required.\";\r\n}\r\n//price_per_hour\r\n//Zip Code\r\nif(!fields[\"price_per_hour\"]){\r\n  formIsValid = false;\r\n  errors[\"price_per_hour\"] = \"Price Per Hour is required.\";\r\n}\r\n//State License\r\nif(!fields[\"state_license\"]){\r\n  formIsValid = false;\r\n  errors[\"state_license\"] = \"State License is required.\";\r\n}\r\n//State License Number\r\nif(!fields[\"state_license_no\"]){\r\n  formIsValid = false;\r\n  errors[\"state_license_no\"] = \"State License Number is required.\";\r\n}\r\n//Description\r\nif(!fields[\"description\"]){\r\n  formIsValid = false;\r\n  errors[\"description\"] = \"Description is required.\";\r\n}\r\n\r\n   this.setState({errors: errors});\r\n   return formIsValid;\r\n}\r\n  //--------- Submit Handller \r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if(this.handleValidation()){\r\n      this.setState({\r\n        buttonText: 'Submiting...'\r\n    })\r\n    \r\n      console.log(this.state.fields);\r\n\r\n      axios({\r\n        method: \"POST\", \r\n        url:\"http://localhost:4100/api/register_therapist\", \r\n        data: this.state.fields,\r\n    }).then((response)=>{\r\n      console.log(response)\r\n      if (response.status === 200) {\r\n        this.setState({ redirectToSuccess: true }); // after signing up, set the state to true. This will trigger a re-render\r\n      }\r\n      \r\n      \r\n        // if (response.data === 'Success'){\r\n        //     alert(\"Message Sent.\"); \r\n        //     this.resetForm()\r\n        // }else if(response.data === 'fail'){\r\n        //     alert(\"Message failed to send.\")\r\n        // }\r\n    })\r\n    \r\n   }else{\r\n    \r\n      //alert(\"Form has errors.\")\r\n   }\r\n\r\n    \r\n\r\n  }\r\n  //--------- Submit Handller End -----------\r\n  handleChange(field, e){         \r\n    let fields = this.state.fields;\r\n    \r\n    if(e.target.files){\r\n      fields[field] = e.target.files[0];\r\n    }else{\r\n      fields[field] = e.target.value;\r\n    }\r\n            \r\n    this.setState({fields});\r\n}\r\n  //--------- Reset Form Fields -------------\r\n  resetForm = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      message: \"\",\r\n      buttonText:\"\"\r\n    })\r\n  };\r\n  //--------- Reset Form Fields End ---------\r\n  render() {\r\n    if (this.state.redirectToSuccess) {\r\n      // redirect to home if signed up\r\n      return <Redirect to = {{ pathname: \"/success\" }} />;\r\n    }\r\n    return (\r\n      <>\r\n        <main role=\"main\" className=\"contentarea\">\r\n      <section className=\"formarea\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4 bgdarkblue\">\r\n              <div className=\"wel regis\">\r\n                <img src=\"common/images/welcom.png\" />\r\n                <h3 className=\"text-center text-white pb-4 mt-4\">Welcome</h3>\t\r\n                <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\r\n                  tempor incididunt ut labore et dolore magna aliqua.</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12 col-sm-12 col-md-8 col-lg-8 col-xl-8 bg-white\">\t\t\t\t\t\t\t\r\n              <form className=\"registration\"  \r\n              onSubmit={ (e) => this.handleSubmit(e)}\r\n              >\t\r\n                <h3 className=\"text-center pb-4\">Thearapist Registration</h3>\r\n                <div className=\"row\">\r\n                  <div className=\"col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                    <div className=\"form-group\">\r\n                      <label>First Name</label>\r\n                      <input \r\n                       type=\"text\" \r\n                       ref=\"first_name\" \r\n                       className=\"form-control\" \r\n                       value={this.state.fields[\"first_name\"]} \r\n                       onChange={this.handleChange.bind(this, \"first_name\")}\r\n                      />\r\n                       <span style={{color: \"red\"}}>{this.state.errors[\"first_name\"]}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label>License</label>\r\n                      <input \r\n                       type=\"text\" \r\n                       ref=\"license_number\" \r\n                       className=\"form-control\"\r\n                       value={this.state.fields[\"license_number\"]}\r\n                       onChange={this.handleChange.bind(this, \"license_number\")} \r\n                      />\r\n                      <span style={{color: \"red\"}}>{this.state.errors[\"license_number\"]}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label>Phone Number</label>\r\n                      <input \r\n                       type=\"number\" \r\n                       ref=\"phone_number\" \r\n                       className=\"form-control\"\r\n                       value={this.state.fields[\"phone_number\"]}\r\n                       onChange={this.handleChange.bind(this, \"phone_number\")}\r\n                       maxLength=\"10\"\r\n                      />\r\n                      <span style={{color: \"red\"}}>{this.state.errors[\"phone_number\"]}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label>Practice Name (If Applicable)</label>\r\n                      <input \r\n                       type=\"text\" \r\n                       ref=\"practice_name\" \r\n                       className=\"form-control\"\r\n                       value={this.state.fields[\"practice_name\"]}\r\n                       onChange={this.handleChange.bind(this, \"practice_name\")}\r\n                      />\r\n                      <span style={{color: \"red\"}}>{this.state.errors[\"practice_name\"]}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label>Address</label>\r\n                      <input \r\n                       type=\"text\" \r\n                       ref=\"address\" \r\n                       className=\"form-control\"\r\n                       value={this.state.fields[\"address\"]}\r\n                       onChange={this.handleChange.bind(this, \"address\")}\r\n                     />\r\n                     <span style={{color: \"red\"}}>{this.state.errors[\"address\"]}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label>Zipcode</label>\r\n                      <input \r\n                       type=\"number\" \r\n                       ref=\"zip\" \r\n                       className=\"form-control\"\r\n                       value={this.state.fields[\"zip\"]}\r\n                       onChange={this.handleChange.bind(this, \"zip\")}\r\n                      />\r\n                      <span style={{color: \"red\"}}>{this.state.errors[\"zip\"]}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label>State License</label>\r\n                      <input \r\n                       type=\"text\" \r\n                       ref=\"state_license\" \r\n                       className=\"form-control\"\r\n                       value={this.state.fields[\"state_license\"]}\r\n                       onChange={this.handleChange.bind(this, \"state_license\")}\r\n                      />\r\n                      <span style={{color: \"red\"}}>{this.state.errors[\"state_license\"]}</span>\r\n                    </div>\r\n                    {/* <div className=\"form-group\">\r\n                      <label>Signature</label>\r\n                      <input type=\"file\" name=\"add\" />\r\n                    </div> */}\r\n                  </div>\r\n                  <div className=\"col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                    <div className=\"form-group\">\r\n                      <label>Last Name</label>\r\n                      <input \r\n                       type=\"text\" \r\n                       ref=\"last_name\" \r\n                       className=\"form-control\"\r\n                       value={this.state.fields[\"last_name\"]} \r\n                      onChange={this.handleChange.bind(this, \"last_name\")}\r\n                      />\r\n                      <span style={{color: \"red\"}}>{this.state.errors[\"last_name\"]}</span>\r\n                    </div>\r\n                    <div \r\n                     className=\"form-group\" \r\n                     ref=\"license_type\" \r\n                     onChange={this.handleChange.bind(this, \"license_type\")}\r\n                    >\r\n                      <label>License Type</label>\r\n                      <select className=\"type form-control\">\r\n                        <option value=\"\">-- Select License Type --</option>\r\n                        <option value={this.state.fields[\"license_type\"]}>LPC</option>\r\n                        <option value={this.state.fields[\"license_type\"]}>Ph.D.</option>\r\n                        <option value={this.state.fields[\"license_type\"]}>Psy.D.</option>\r\n                        <option value={this.state.fields[\"license_type\"]}>LMFT</option>\r\n                        <option value={this.state.fields[\"license_type\"]}>LCADAC</option>\r\n                        <option value={this.state.fields[\"license_type\"]}>LICSW</option>\r\n                        <option value={this.state.fields[\"license_type\"]}>LCSW Licensed Clinical Social Worker</option>\r\n                        <option value={this.state.fields[\"license_type\"]}>ACSW</option>\r\n                        <option value={this.state.fields[\"license_type\"]}>LMSW</option>\r\n                        <option value={this.state.fields[\"license_type\"]}>LMHC</option>\r\n                        <option value={this.state.fields[\"license_type\"]}>MHC</option>\r\n                      </select>\r\n                      <span style={{color: \"red\"}}>{this.state.errors[\"license_type\"]}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label>Email</label>\r\n                      <input \r\n                       type=\"text\" \r\n                       ref=\"email\" \r\n                       className=\"form-control\" \r\n                       value={this.state.fields[\"email\"]}\r\n                       onChange={this.handleChange.bind(this, \"email\")}\r\n                      />\r\n                       <span style={{color: \"red\"}}>{this.state.errors[\"email\"]}</span>\r\n                    </div>\r\n                    <div \r\n                     className=\"form-group\">\r\n                      <label>State</label>\r\n                      <select \r\n                       className=\"form-control\"\r\n                       ref=\"state\"\r\n                      onChange={this.handleChange.bind(this, \"state\")}\r\n                      >\r\n                        <option value=\"\">-- Select State --</option>\r\n                        <option value={this.state.fields[\"state\"]}> Australia</option>\r\n                        <option value={this.state.fields[\"state\"]}> Australia</option>\r\n                        <option value={this.state.fields[\"state\"]}> USA</option>\r\n                        <option value={this.state.fields[\"state\"]}> India</option>\r\n                        <option value={this.state.fields[\"state\"]}> Japan</option>\r\n                        <option value={this.state.fields[\"state\"]}> Shreelanka</option>\r\n                      </select>\r\n                      <span style={{color: \"red\"}}>{this.state.errors[\"state\"]}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label>City</label>\r\n                      <input \r\n                       type=\"text\" \r\n                       ref=\"city\" \r\n                       className=\"form-control\"\r\n                       value={this.state.fields[\"city\"]}\r\n                      onChange={this.handleChange.bind(this, \"city\")}\r\n                      />\r\n                       <span style={{color: \"red\"}}>{this.state.errors[\"city\"]}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label>Price Per Hour</label>\r\n                      <input \r\n                       type=\"number\" \r\n                       ref=\"price_per_hour\" \r\n                       className=\"form-control\"\r\n                       value={this.state.fields[\"price_per_hour\"]}\r\n                       onChange={this.handleChange.bind(this, \"price_per_hour\")}\r\n                      />\r\n                      <span style={{color: \"red\"}}>{this.state.errors[\"price_per_hour\"]}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label>State License Number</label>\r\n                      <input \r\n                       type=\"text\" \r\n                       ref=\"state_license_no\" \r\n                       className=\"form-control\"\r\n                       value={this.state.fields[\"state_license_no\"]}\r\n                       onChange={this.handleChange.bind(this, \"state_license_no\")}\r\n                      />\r\n                      <span style={{color: \"red\"}}>{this.state.errors[\"state_license_no\"]}</span>\r\n                    </div>\r\n                   \r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">  \r\n                  <div className=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\">\r\n                  <div className=\"form-group\">\r\n                      <label>Description</label>\r\n                      <textarea \r\n                       className=\"form-control w-100\"\r\n                       rows={5}\r\n                       ref=\"description\"\r\n                       onChange={this.handleChange.bind(this, \"description\")}\r\n                      >\r\n                        {this.state.fields[\"description\"]}\r\n                      </textarea>\r\n                      <span style={{color: \"red\"}}>{this.state.errors[\"description\"]}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\">\r\n                  <div className=\"form-group\">\r\n                      <label>Description</label>\r\n                      <textarea \r\n                       className=\"form-control w-100\"\r\n                       rows={5}\r\n                       ref=\"description\"\r\n                       onChange={this.handleChange.bind(this, \"description\")}\r\n                      >\r\n                        {this.state.fields[\"description\"]}\r\n                      </textarea>\r\n                      <span style={{color: \"red\"}}>{this.state.errors[\"description\"]}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">  \r\n                  <div className=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\">\r\n                    <div className=\"form-group mt-3\">\r\n                      <button type=\"submit\" className=\"btn submit btn-primary btn-md\">{this.state.buttonText}</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\t\r\n        </div>\r\n      </section>\r\n</main>\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n","D:\\xampp\\htdocs\\react-zip\\react-zip\\src\\components\\partials\\Header.js",["180","181","182","183","184"],"import React from \"react\";\r\n\r\n\r\nconst Header = ({ appLogo }) => {\r\n\r\n  return (\r\n    <>\r\n      <header id=\"head\">\t\t\t\r\n  <nav className=\"brand\">\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n          <a href=\"javascript:void(0)\"><img src=\"common/images/logo.png\" /></a>\r\n        </div>\r\n        <div className=\"col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6 text-right\">\r\n          <a href=\"javascript:void(0)\" className=\"text-white therapist\">Therapist Registration</a>\r\n        </div>\t\t\t\t\t\r\n      </div>\r\n    </div>\r\n  </nav>\t\t\r\n</header>\r\n\r\n    </>\r\n  );\r\n};\r\nexport default Header;\r\n","D:\\xampp\\htdocs\\react-zip\\react-zip\\src\\components\\partials\\Footer.js",["185","186","187","188","189","190","191","192","193","194"],"import React from \"react\";\r\nexport default function Footer() {\r\n  return (\r\n   <footer className=\"foot wow fadeInUp mt-5\">\r\n  <div className=\"container\">\r\n    <div className=\"row\">\r\n      <div className=\"col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4\">\r\n        <div className=\"copyright text-white \">\r\n          <p>© Copyright. All Rights Reserved </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-12 col-sm-12 col-md-8 col-lg-8 col-xl-8\">\r\n        <ul>\r\n          <li><a href=\"javascript:void(0)\">Log in</a></li>\r\n          <li><a href=\"javascript:void(0)\">Terms</a></li>\r\n          <li><a href=\"javascript:void(0)\">Privacy</a></li>\r\n          <li><a href=\"javascript:void(0)\">FAQ's</a></li>\r\n          <li><a href=\"javascript:void(0)\">Contact</a></li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</footer>\r\n\r\n  );\r\n}\r\n","D:\\xampp\\htdocs\\react-zip\\react-zip\\src\\pages\\Success.js",["195"],"import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass Success extends Component {\r\n  render() {\r\n    return (\r\n        <main role=\"main\" className=\"contentarea\">\r\n        <section className=\"success\">\r\n            <div className=\"container\">\r\n            <div className=\"massage\">\r\n                <div className=\"succicon bg-success\">\r\n                <img src=\"common/images/succ.png\" alt />\r\n                </div>\r\n                <h2 className=\"pb-3 mt-5\">Success</h2>\r\n                <p>You are successfully registered </p>\r\n                <Link className=\"btn btn-success mt-4\" to=\"/\">\r\n                    Ok\r\n                </Link>\r\n            </div>\r\n            </div>\r\n        </section>\r\n      </main>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Success;\r\n","D:\\xampp\\htdocs\\property-app\\front-app\\src\\index.js",[],["196","197"],"D:\\xampp\\htdocs\\property-app\\front-app\\src\\App.js",[],"D:\\xampp\\htdocs\\property-app\\front-app\\src\\reportWebVitals.js",[],"D:\\xampp\\htdocs\\property-app\\front-app\\src\\pages\\TherapistRegistration.js",["198","199","200"],["201","202"],"D:\\xampp\\htdocs\\property-app\\front-app\\src\\components\\partials\\Header.js",["203","204","205","206","207","208"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = ({ appLogo }) => {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"navbar-header\">\r\n          <a\r\n            href=\"javascript:void(0);\"\r\n            className=\"navbar-toggle collapsed\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbar-collapse\"\r\n            aria-expanded=\"false\"\r\n          />\r\n          <a href=\"javascript:void(0);\" className=\"bars\" />\r\n          <a className=\"navbar-brand\" href=\"index.html\">\r\n            {localStorage.getItem(\"name\")}\r\n          </a>\r\n        </div>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbar-collapse\">\r\n          <ul className=\"nav navbar-nav navbar-right\">\r\n            {/* Call Search */}\r\n            {/* #END# Call Search */}\r\n            {/* Notifications */}\r\n\r\n            {/* #END# Notifications */}\r\n            {/* Tasks */}\r\n\r\n            {/* #END# Tasks */}\r\n            <li className=\"\">\r\n              <Link to=\"/logout\">\r\n                <i className=\"material-icons\">logout</i>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nexport default Header;\r\n",["209","210"],"D:\\xampp\\htdocs\\property-app\\front-app\\src\\components\\partials\\Footer.js",[],"D:\\xampp\\htdocs\\property-app\\front-app\\src\\pages\\Register.js",["211","212","213","214","215","216"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Link} from \"react-router-dom\";\r\n// React Notification\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\nexport class Register extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          page: props.page,\r\n          submitting: false,\r\n          submitted: false,\r\n          failedSubmit: false,\r\n          buttonText:\"Submit\",\r\n          fields: {},\r\n          errors: {},\r\n          redirectToSuccess: false,\r\n        };\r\n      }\r\n      componentWillMount(){\r\n        document.getElementById('body').className='signup-page'\r\n      }\r\n        \r\n      handleValidation(){\r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n    \r\n\r\n        if(!fields[\"company_name\"]){\r\n           formIsValid = false;\r\n           errors[\"company_name\"] = \"Company name is required.\";\r\n        }\r\n        if(!fields[\"first_name\"]){\r\n          formIsValid = false;\r\n          errors[\"first_name\"] = \"First name is required.\";\r\n       }\r\n        if(!fields[\"last_name\"]){\r\n          formIsValid = false;\r\n          errors[\"last_name\"] = \"Last name is required.\";\r\n       }\r\n       if(!fields[\"email\"]){\r\n        formIsValid = false;\r\n        errors[\"email\"] = \"Email address is required.\";\r\n    }\r\n    if(typeof fields[\"email\"] !== \"undefined\"){\r\n        let lastAtPos = fields[\"email\"].lastIndexOf('@');\r\n        let lastDotPos = fields[\"email\"].lastIndexOf('.');\r\n    \r\n        if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') == -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\r\n          formIsValid = false;\r\n          errors[\"email\"] = \"Please enter valid email address.\";\r\n        }\r\n    }\r\n    //Contact\r\n    if(!fields[\"phone_number\"]){\r\n      formIsValid = false;\r\n      errors[\"phone_number\"] = \"Phone number is required.\";\r\n    }\r\n    \r\n     //Password\r\n     if(!fields[\"password\"]){\r\n      formIsValid = false;\r\n      errors[\"password\"] = \"Password is required.\";\r\n   }\r\n   //Confirm Password\r\n   if(!fields[\"confirm_password\"]){\r\n    formIsValid = false;\r\n    errors[\"confirm_password\"] = \"Confirm Password is required.\";\r\n }\r\n\r\n if (typeof fields[\"password\"] !== \"undefined\" && typeof fields[\"confirm_password\"] !== \"undefined\") {\r\n    \r\n  if (fields[\"password\"] != fields[\"confirm_password\"]) {\r\n    formIsValid = false;\r\n    errors[\"password\"] = \"Passwords don't match.\";\r\n  }\r\n} \r\n   \r\n       this.setState({errors: errors});\r\n       return formIsValid;\r\n    }\r\n        //--------- Submit Handller \r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if(this.handleValidation()){\r\n      this.setState({\r\n        buttonText: 'Submiting...'\r\n    })\r\n    \r\n      console.log(this.state.fields);\r\n      axios({\r\n        method: \"POST\", \r\n        url:\"http://157.245.250.121:4100/api/property_register\", \r\n        data: this.state.fields,\r\n    }).then((response)=>{\r\n      console.log(response)\r\n      if(response.data === \"email already exists\"){\r\n        NotificationManager.warning('Email id already exists.', 'Error');\r\n      }\r\n      if (response.data.result === \"success\") {\r\n        NotificationManager.success('Successfully Registered.', 'Success');\r\n        setTimeout(function(){\r\n          window.location.reload();\r\n      }, 2000)\r\n        //this.setState({ redirectToSuccess: true }); // after signing up, set the state to true. This will trigger a re-render\r\n      }\r\n    })\r\n    }\r\n      \r\n\r\n\r\n    \r\n\r\n  }\r\n    handleChange(field, e){         \r\n        let fields = this.state.fields;\r\n        \r\n        if(e.target.files){\r\n          fields[field] = e.target.files[0];\r\n        }else{\r\n          fields[field] = e.target.value;\r\n        }\r\n        console.log(fields)        \r\n        this.setState({fields});\r\n    }\r\n     //--------- Reset Form Fields -------------\r\n  resetForm = () => {\r\n    this.setState({\r\n      fields:{}\r\n    })\r\n  };\r\n    render() {\r\n        return (\r\n                <div className=\"signup-box\">\r\n                <div className=\"logo\">\r\n                    <a href=\"javascript:void(0);\">Registration</a>\r\n                </div>\r\n                <div className=\"card\">\r\n                    <div className=\"body\">\r\n                    <form id=\"sign_ups\" method=\"POST\" onSubmit={ (e) => this.handleSubmit(e)}>\r\n                        <div className=\"msg\">Register a new company</div>\r\n                        <div className=\"input-group\">\r\n                        <span className=\"input-group-addon\">\r\n                            <i className=\"material-icons\">home</i>\r\n                        </span>\r\n                        <div className={`form-line  ${this.state.errors.company_name ? 'error focused' : ''}`}>\r\n                            <input\r\n                             type=\"text\" \r\n                             className=\"form-control\" \r\n                             ref=\"company_name\" \r\n                             placeholder=\"Company Name\" \r\n                             value={this.state.fields[\"company_name\"]} \r\n                             onChange={this.handleChange.bind(this, \"company_name\")}\r\n                            />\r\n                        </div>\r\n                        <label id=\"password-error\" class=\"error\" for=\"password\">{this.state.errors.company_name}</label>\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                        <span className=\"input-group-addon\">\r\n                            <i className=\"material-icons\">person</i>\r\n                        </span>\r\n                        <div className={`form-line  ${this.state.errors.first_name ? 'error focused' : ''}`}>\r\n                            <input \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            ref=\"first_name\" \r\n                            placeholder=\"First Name\"\r\n                            value={this.state.fields[\"first_name\"]} \r\n                            onChange={this.handleChange.bind(this, \"first_name\")}\r\n                            />\r\n                        </div>\r\n                        <label id=\"password-error\" class=\"error\" for=\"password\">{this.state.errors.first_name}</label>\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                        <span className=\"input-group-addon\">\r\n                            <i className=\"material-icons\">person</i>\r\n                        </span>\r\n                        <div className={`form-line  ${this.state.errors.last_name ? 'error focused' : ''}`}>\r\n                            <input \r\n                             type=\"text\" \r\n                             className=\"form-control\" \r\n                             ref=\"last_name\" \r\n                             placeholder=\"Last Name\" \r\n                             value={this.state.fields[\"last_name\"]} \r\n                             onChange={this.handleChange.bind(this, \"last_name\")}\r\n                            />\r\n                        </div>\r\n                        <label id=\"password-error\" class=\"error\" for=\"password\">{this.state.errors.last_name}</label>\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                        <span className=\"input-group-addon\">\r\n                            <i className=\"material-icons\">email</i>\r\n                        </span>\r\n                        <div className={`form-line  ${this.state.errors.email ? 'error focused' : ''}`}>\r\n                            <input \r\n                             type=\"email\" \r\n                             className=\"form-control\" \r\n                             ref=\"email\" \r\n                             placeholder=\"Email Address\" \r\n                             value={this.state.fields[\"email\"]} \r\n                             onChange={this.handleChange.bind(this, \"email\")}\r\n                            />\r\n                        </div>\r\n                        <label id=\"password-error\" class=\"error\" for=\"password\">{this.state.errors.email}</label>\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                        <span className=\"input-group-addon\">\r\n                            <i className=\"material-icons\">phone</i>\r\n                        </span>\r\n                        <div className={`form-line  ${this.state.errors.phone_number ? 'error focused' : ''}`}>\r\n                            <input \r\n                             type=\"text\" \r\n                             className=\"form-control\" \r\n                             ref=\"phone_number\" \r\n                             placeholder=\"Contact Number\" \r\n                             value={this.state.fields[\"phone_number\"]} \r\n                             onChange={this.handleChange.bind(this, \"phone_number\")}\r\n                            />\r\n                        </div>\r\n                        <label id=\"password-error\" class=\"error\" for=\"password\">{this.state.errors.phone_number}</label>\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                        <span className=\"input-group-addon\">\r\n                            <i className=\"material-icons\">lock</i>\r\n                        </span>\r\n                        <div className={`form-line  ${this.state.errors.password ? 'error focused' : ''}`}>\r\n                            <input \r\n                             type=\"password\" \r\n                             className=\"form-control\" \r\n                             name=\"password\" \r\n                             minLength={6} \r\n                             placeholder=\"Password\" \r\n                             value={this.state.fields[\"password\"]} \r\n                             onChange={this.handleChange.bind(this, \"password\")}\r\n                            />\r\n                        </div>\r\n                        <label id=\"password-error\" class=\"error\" for=\"password\">{this.state.errors.password}</label>\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                        <span className=\"input-group-addon\">\r\n                            <i className=\"material-icons\">lock</i>\r\n                        </span>\r\n                        <div className={`form-line  ${this.state.errors.confirm_password ? 'error focused' : ''}`}>\r\n                            <input type=\"password\" className=\"form-control\" ref=\"confirm_password\" minLength={6} placeholder=\"Confirm Password\" value={this.state.fields[\"confirm_password\"]} \r\n                             onChange={this.handleChange.bind(this, \"confirm_password\")}  />\r\n                        </div>\r\n                        <label id=\"password-error\" class=\"error\" for=\"password\">{this.state.errors.confirm_password}</label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                        <input type=\"checkbox\" name=\"terms\" id=\"terms\" className=\"filled-in chk-col-pink\" value={this.state.fields[\"terms\"]} \r\n                             onChange={this.handleChange.bind(this, \"terms\")} />\r\n                        <label htmlFor=\"terms\">I read and agree to the <a href=\"javascript:void(0);\" >terms of usage</a>.</label>\r\n                        </div>\r\n                        <button className=\"btn btn-block btn-lg bg-pink waves-effect\" type=\"submit\">SIGN UP</button>\r\n                        <div className=\"m-t-25 m-b--5 align-center\">\r\n                        <Link  to=\"/\">\r\n                        Already have an account?\r\n                        </Link>\r\n                        </div>\r\n                    </form>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register\r\n","D:\\xampp\\htdocs\\property-app\\front-app\\src\\pages\\Login.js",["217","218","219"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from 'react-router'\r\nimport {Link} from \"react-router-dom\";\r\n// React Notification\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\n\r\nexport class Login extends Component {\r\n  componentWillMount(){\r\n   // document.getElementById('body').className='login-page'\r\n    document.getElementById('body').className='l'\r\n  }\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      page: props.page,\r\n      submitting: false,\r\n      submitted: false,\r\n      failedSubmit: false,\r\n      buttonText:\"Submit\",\r\n      fields: {},\r\n      errors: {},\r\n      redirectToSuccess: false,\r\n    };\r\n  }\r\n  handleValidation(){\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n   //email\r\n    if(!fields[\"email\"]){\r\n       formIsValid = false;\r\n       errors[\"email\"] = \"Email is required.\";\r\n    }\r\n    if (typeof fields[\"email\"] !== \"undefined\") {\r\n          \r\n      var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n      if (!pattern.test(fields[\"email\"])) {\r\n        formIsValid = false;\r\n        errors[\"email\"] = \"Please enter valid email address.\";\r\n      }\r\n    }\r\n    //Confirm Password\r\n    if(!fields[\"password\"]){\r\n      formIsValid = false;\r\n      errors[\"password\"] = \"Password is required.\";\r\n   }\r\n\r\n   this.setState({errors: errors});\r\n   console.log(this.state.errors)\r\n   return formIsValid;\r\n}\r\n     \r\n        //--------- Submit Handller \r\n        handleSubmit = (e) => {\r\n          e.preventDefault()\r\n          if(this.handleValidation()){\r\n            this.setState({\r\n              buttonText: 'Submiting...'\r\n          })\r\n          \r\n            console.log(this.state.fields);\r\n            axios({\r\n              method: \"POST\", \r\n              url:\"http://157.245.250.121:4100/api/login\", \r\n              data: this.state.fields,\r\n          }).then((response)=>{\r\n            console.log(response)\r\n            // if (response.data.message === \"login sucessfully\") {\r\n            //     NotificationManager.success('Successfully login.', 'Success');\r\n            // //     setTimeout(function(){\r\n                  \r\n            // // }, 2000)\r\n            // let fullName = response.data.userinfo.first_name+' '+response.data.userinfo.last_name;\r\n            // let emailID = response.data.userinfo.email;\r\n            // let id = response.data.userinfo.id;\r\n            // localStorage.setItem('name', fullName);\r\n            // localStorage.setItem('email', emailID);\r\n            // localStorage.setItem('id', id);\r\n            // this.setState({ redirectToSuccess: true });\r\n            \r\n            // }else{\r\n            //   NotificationManager.warning('Please enter valid credentials.', 'Error');\r\n                \r\n            // }\r\n            if(response.data.message === \"otp successfully updated\"){\r\n              NotificationManager.success('OPT Successfully send to your email id.', 'Success');\r\n              let id = response.data.userinfo.id;\r\n              localStorage.setItem('id', id);\r\n              this.setState({ redirectToSuccess: true });\r\n            }else{\r\n              NotificationManager.warning('Please enter valid credentials.', 'Error');\r\n            }\r\n              \r\n          })\r\n          }\r\n        }\r\n          handleChange(field, e){         \r\n              let fields = this.state.fields;\r\n              \r\n              if(e.target.files){\r\n                fields[field] = e.target.files[0];\r\n              }else{\r\n                fields[field] = e.target.value;\r\n              }\r\n              console.log(fields)        \r\n              this.setState({fields});\r\n          }\r\n  render() {\r\n    if (this.state.redirectToSuccess) {\r\n      // redirect to home if signed up\r\n      return <Redirect to = {{ pathname: \"/two-step-login/\"+localStorage.getItem('id') }} />;\r\n    }\r\n    return (\r\n      <>\r\n      <div className=\"wrapper\">\r\n   <header className=\"tophdr\">\r\n     <div className=\"brand\">\r\n       <a href=\"javascript:void(0)\"><img src=\"common/images/logo.png\" alt=\"brand\" /></a>\r\n     </div>\r\n   </header>\r\n   <main role=\"main\" className=\"contentarea\">\r\n     <section className=\"formsection\">\r\n       <div className=\"d-flex justify-content-between pl-3 pr-3 marginemoji\">\r\n         <div className=\"emojione emoji\">\r\n           <img src=\"common/images/emoji01.png\" alt=\"emoji\" />\r\n         </div>\r\n         <div className=\"emojitwo\">\r\n           <img src=\"common/images/emoji02.png\" alt=\"emoji\" />\r\n         </div>\r\n         <div className=\"emoji\">\r\n           <img src=\"common/images/emoji03.png\" alt=\"emoji\" />\r\n         </div>\r\n         <div className=\"emojitwo\">\r\n           <img src=\"common/images/emoji04.png\" alt=\"emoji\" />\r\n         </div>\r\n         <div className=\"emoji emojilast\">\r\n           <img src=\"common/images/emoji05.png\" alt=\"emoji\" />\r\n         </div>\r\n       </div>\r\n       <div className=\"container\">\r\n         <div className=\"formcenter\">\r\n           <form className=\"form-group\" method=\"POST\" onSubmit={ (e) => this.handleSubmit(e)}>\r\n             <h2 className=\"text-center logincent\">Login</h2>\r\n             <div className=\"form-group\">\r\n               <label>Username</label>\r\n               <input\r\n                 type=\"text\" \r\n                 className=\"form-control\" \r\n                 ref=\"email\" \r\n                 placeholder=\"Email\" \r\n                 value={this.state.fields[\"email\"]} \r\n                 onChange={this.handleChange.bind(this, \"email\")}\r\n               />\r\n             </div>\r\n             <label id=\"email-error\" class=\"error\" for=\"email\">{this.state.errors.email}</label>\r\n             <div className=\"form-group\">\r\n               <label>Password</label>\r\n               <input \r\n                   type=\"password\" \r\n                   className=\"form-control\" \r\n                   ref=\"password\" \r\n                   placeholder=\"Password\" \r\n                   value={this.state.fields[\"password\"]} \r\n                   onChange={this.handleChange.bind(this, \"password\")}\r\n               />\r\n               <div className=\"form-group text-right\">\r\n                 <span>\r\n                 <Link className=\"removeLink\" to=\"/forgot-password\">Forgot Password?</Link>\r\n                  </span>\r\n               </div>\t\t\t\t\t\t\r\n             </div>\r\n             <label id=\"password-error\" class=\"error\" for=\"password\">{this.state.errors.password}</label>\r\n             <div className=\"form-group text-center\">\r\n               <button type=\"submit\" className=\"btndanger\">Login</button>\r\n             </div>\r\n             <div className=\"form-group text-center regis\">\r\n               <Link className=\"removeLink\" to=\"register\">Register</Link>\r\n             </div>\r\n           </form>\r\n         </div>\r\n       </div>\r\n     </section>\t\r\n   </main>\r\n </div>\r\n </>\r\n\r\n      // <div className=\"login-box\">\r\n      // <div className=\"logo\">\r\n      // <a href=\"#\">Login</a>\r\n      \r\n      // </div>\r\n      // <div className=\"card\">\r\n      // <div className=\"body\">\r\n      // <form id=\"sign_ins\" method=\"POST\" onSubmit={ (e) => this.handleSubmit(e)}>\r\n      // <div className=\"msg\">Sign in to start your session</div>\r\n      // <div className=\"input-group\">\r\n      //   <span className=\"input-group-addon\">\r\n      //     <i className=\"material-icons\">email</i>\r\n      //   </span>\r\n      //   <div className={`form-line  ${this.state.errors.email ? 'error focused' : ''}`}>\r\n      //     <input \r\n      //      type=\"text\" \r\n      //      className=\"form-control\" \r\n      //      ref=\"email\" \r\n      //      placeholder=\"Email\" \r\n      //      value={this.state.fields[\"email\"]} \r\n      //      onChange={this.handleChange.bind(this, \"email\")}\r\n      //     />\r\n      //   </div>\r\n      //   <label id=\"email-error\" class=\"error\" for=\"email\">{this.state.errors.email}</label>\r\n      // </div>\r\n      // <div className=\"input-group\">\r\n      //   <span className=\"input-group-addon\">\r\n      //     <i className=\"material-icons\">lock</i>\r\n      //   </span>\r\n      //   <div className={`form-line  ${this.state.errors.password ? 'error focused' : ''}`}>\r\n      //     <input \r\n      //      type=\"password\" \r\n      //      className=\"form-control\" \r\n      //      ref=\"password\" \r\n      //      placeholder=\"Password\" \r\n      //      value={this.state.fields[\"password\"]} \r\n      //      onChange={this.handleChange.bind(this, \"password\")}\r\n      //     />\r\n      //   </div>\r\n      //   <label id=\"password-error\" class=\"error\" for=\"password\">{this.state.errors.password}</label>\r\n      // </div>\r\n      // <div className=\"row\">\r\n      //   <div className=\"col-xs-8 p-t-5\">\r\n      //     <input type=\"checkbox\" name=\"rememberme\" id=\"rememberme\" className=\"filled-in chk-col-pink\" />\r\n      //     <label htmlFor=\"rememberme\">Remember Me</label>\r\n      //   </div>\r\n      //   <div className=\"col-xs-4\">\r\n      //     <button className=\"btn btn-block bg-pink waves-effect\" type=\"submit\">SIGN IN</button>\r\n      //   </div>\r\n      // </div>\r\n      // <div className=\"row m-t-15 m-b--20\">\r\n      //   <div className=\"col-xs-6\">\r\n      //   <Link  to=\"/register\">\r\n      //            Register Now!\r\n      // </Link>\r\n      //   </div>\r\n      //   <div className=\"col-xs-6 align-right\">\r\n      //     <Link  to=\"/forgot-password\">\r\n      //     Forgot Password?\r\n      //    </Link>\r\n      //   </div>\r\n      // </div>\r\n      // </form>\r\n      // </div>\r\n      // </div>\r\n      // </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login\r\n","D:\\xampp\\htdocs\\property-app\\front-app\\src\\pages\\ForgotPassword.js",["220","221"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\nexport class ForgotPassword extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          page: props.page,\r\n          submitting: false,\r\n          submitted: false,\r\n          failedSubmit: false,\r\n          buttonText:\"RESET MY PASSWORD\",\r\n          fields: {},\r\n          errors: {},\r\n          redirectToSuccess: false,\r\n        };\r\n      }\r\n    componentWillMount(){\r\n        document.getElementById('body').className='fp-page'\r\n      }\r\n      handleValidation(){\r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n    \r\n        //email\r\n        if(!fields[\"email\"]){\r\n          formIsValid = false;\r\n          errors[\"email\"] = \"Email is required.\";\r\n      }\r\n      if (typeof fields[\"email\"] !== \"undefined\") {\r\n            \r\n        var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n        if (!pattern.test(fields[\"email\"])) {\r\n          formIsValid = false;\r\n          errors[\"email\"] = \"Please enter valid email address.\";\r\n        }\r\n      }\r\n    \r\n       this.setState({errors: errors});\r\n       console.log(this.state.errors)\r\n       return formIsValid;\r\n    }\r\n     \r\n      \r\n        //--------- Submit Handller \r\n        handleSubmit = (e) => {\r\n            e.preventDefault()\r\n            if(this.handleValidation()){\r\n              this.setState({\r\n                buttonText: 'Submiting...'\r\n            })\r\n            \r\n              console.log(this.state.fields);\r\n              axios({\r\n                method: \"POST\", \r\n                url:\"http://157.245.250.121:4100/api/forgot_password\", \r\n                data: this.state.fields,\r\n            }).then((response)=>{\r\n              console.log(response)\r\n              if (response.data.message === \"Email does not match\") {\r\n                  this.setState({ buttonText: \"RESET MY PASSWORD\" });\r\n                  NotificationManager.warning('Email does not exist.', 'Error');              \r\n              }else{\r\n                this.setState({ buttonText: \"RESET MY PASSWORD\" });\r\n                NotificationManager.success('We have sent a reset password link to your email.', 'Success');\r\n                  \r\n              }\r\n                \r\n            })\r\n            }\r\n          }\r\n            handleChange(field, e){         \r\n                let fields = this.state.fields;\r\n                \r\n                if(e.target.files){\r\n                  fields[field] = e.target.files[0];\r\n                }else{\r\n                  fields[field] = e.target.value;\r\n                }\r\n                console.log(fields)        \r\n                this.setState({fields});\r\n            }\r\n       \r\n    render() {\r\n        return (\r\n            <div className=\"fp-box\">\r\n            <div className=\"logo\">\r\n                <a href=\"javascript:void(0);\">Forgot Password</a>\r\n            </div>\r\n            <div className=\"card\">\r\n                <div className=\"body\">\r\n                <form id=\"forgot_passwords\" method=\"POST\" onSubmit={ (e) => this.handleSubmit(e)}>\r\n                    <div className=\"msg\">\r\n                    Enter your email address that you used to register. We'll send you an email with your username and a\r\n                    link to reset your password.\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                    <span className=\"input-group-addon\">\r\n                        <i className=\"material-icons\">email</i>\r\n                    </span>\r\n                    <div className={`form-line  ${this.state.errors.email ? 'error focused' : ''}`}>\r\n                        <input type=\"text\" className=\"form-control\" ref=\"email\" placeholder=\"Email\"   value={this.state.fields[\"email\"]} \r\n          onChange={this.handleChange.bind(this, \"email\")} />\r\n                    </div>\r\n                    <label id=\"password-error\" class=\"error\" for=\"password\">{this.state.errors.email}</label>\r\n                    </div>\r\n        <button className=\"btn btn-block btn-lg bg-pink waves-effect\" type=\"submit\">{this.state.buttonText}</button>\r\n                    <div className=\"row m-t-20 m-b--5 align-center\">\r\n                    <Link to=\"/\">Sign In!</Link>\r\n                    </div>\r\n                </form>\r\n                </div>\r\n            </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ForgotPassword\r\n","D:\\xampp\\htdocs\\property-app\\front-app\\src\\app\\store.js",[],"D:\\xampp\\htdocs\\property-app\\front-app\\src\\features\\userSlice.js",[],"D:\\xampp\\htdocs\\property-app\\front-app\\src\\pages\\Logout.js",[],"D:\\xampp\\htdocs\\property-app\\front-app\\src\\store.js",[],"D:\\xampp\\htdocs\\property-app\\front-app\\src\\actions\\authActions.js",[],"D:\\xampp\\htdocs\\property-app\\front-app\\src\\actions\\types.js",[],"D:\\xampp\\htdocs\\property-app\\front-app\\src\\reducers\\index.js",[],"D:\\xampp\\htdocs\\property-app\\front-app\\src\\utils\\setAuthToken.js",[],"D:\\xampp\\htdocs\\property-app\\front-app\\src\\reducers\\authReducers.js",[],"D:\\xampp\\htdocs\\property-app\\front-app\\src\\pages\\Dashboard.js",["222"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"../components/partials/Header\";\r\nimport Sidebar from \"../components/partials/Sidebar\";\r\nexport class Dashboard extends Component {\r\n  componentWillMount() {\r\n    document.getElementById(\"body\").className = \"theme-red\";\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>\r\n          <div className=\"overlay\" />\r\n          {/* Search Bar */}\r\n          <div className=\"search-bar\">\r\n            <div className=\"search-icon\">\r\n              <i className=\"material-icons\">search</i>\r\n            </div>\r\n            <input type=\"text\" placeholder=\"START TYPING...\" />\r\n            <div className=\"close-search\">\r\n              <i className=\"material-icons\">close</i>\r\n            </div>\r\n          </div>\r\n          {/* #END# Search Bar */}\r\n          {/* Top Bar */}\r\n          <Header />\r\n          {/* #Top Bar */}\r\n          <section>\r\n            {/* Left Sidebar */}\r\n            <Sidebar />\r\n            {/* #END# Right Sidebar */}\r\n          </section>\r\n          <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"block-header\">\r\n                <h2>DASHBOARD</h2>\r\n              </div>\r\n              {/* Widgets */}\r\n              <div className=\"row clearfix\">\r\n                <div className=\"col-lg-3 col-md-3 col-sm-6 col-xs-12\">\r\n                  <div className=\"info-box bg-pink hover-expand-effect\">\r\n                    <div className=\"icon\">\r\n                      <i className=\"material-icons\">playlist_add_check</i>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                      <div className=\"text\">NEW TASKS</div>\r\n                      <div\r\n                        className=\"number count-to\"\r\n                        data-from={0}\r\n                        data-to={125}\r\n                        data-speed={15}\r\n                        data-fresh-interval={20}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-3 col-md-3 col-sm-6 col-xs-12\">\r\n                  <div className=\"info-box bg-cyan hover-expand-effect\">\r\n                    <div className=\"icon\">\r\n                      <i className=\"material-icons\">help</i>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                      <div className=\"text\">NEW TICKETS</div>\r\n                      <div\r\n                        className=\"number count-to\"\r\n                        data-from={0}\r\n                        data-to={257}\r\n                        data-speed={1000}\r\n                        data-fresh-interval={20}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-3 col-md-3 col-sm-6 col-xs-12\">\r\n                  <div className=\"info-box bg-light-green hover-expand-effect\">\r\n                    <div className=\"icon\">\r\n                      <i className=\"material-icons\">forum</i>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                      <div className=\"text\">NEW COMMENTS</div>\r\n                      <div\r\n                        className=\"number count-to\"\r\n                        data-from={0}\r\n                        data-to={243}\r\n                        data-speed={1000}\r\n                        data-fresh-interval={20}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-3 col-md-3 col-sm-6 col-xs-12\">\r\n                  <div className=\"info-box bg-orange hover-expand-effect\">\r\n                    <div className=\"icon\">\r\n                      <i className=\"material-icons\">person_add</i>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                      <div className=\"text\">NEW VISITORS</div>\r\n                      <div\r\n                        className=\"number count-to\"\r\n                        data-from={0}\r\n                        data-to={1225}\r\n                        data-speed={1000}\r\n                        data-fresh-interval={20}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* #END# Widgets */}\r\n\r\n              <div className=\"row clearfix\">\r\n                {/* Visitors */}\r\n                <div className=\"col-xs-12 col-sm-12 col-md-4 col-lg-4\">\r\n                  <div className=\"card\">\r\n                    <div className=\"body bg-pink\">\r\n                      <div className=\"m-b--35 font-bold\">\r\n                        LATEST SOCIAL TRENDS\r\n                      </div>\r\n                      <ul className=\"dashboard-stat-list\">\r\n                        <li>\r\n                          #socialtrends\r\n                          <span className=\"pull-right\">\r\n                            <i className=\"material-icons\">trending_up</i>\r\n                          </span>\r\n                        </li>\r\n                        <li>\r\n                          #materialdesign\r\n                          <span className=\"pull-right\">\r\n                            <i className=\"material-icons\">trending_up</i>\r\n                          </span>\r\n                        </li>\r\n                        <li>#adminbsb</li>\r\n                        <li>#freeadmintemplate</li>\r\n                        <li>#bootstraptemplate</li>\r\n                        <li>\r\n                          #freehtmltemplate\r\n                          <span className=\"pull-right\">\r\n                            <i className=\"material-icons\">trending_up</i>\r\n                          </span>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {/* #END# Visitors */}\r\n                {/* Latest Social Trends */}\r\n                <div className=\"col-xs-12 col-sm-12 col-md-4 col-lg-4\">\r\n                  <div className=\"card\">\r\n                    <div className=\"body bg-cyan\">\r\n                      <div className=\"m-b--35 font-bold\">\r\n                        LATEST SOCIAL TRENDS\r\n                      </div>\r\n                      <ul className=\"dashboard-stat-list\">\r\n                        <li>\r\n                          #socialtrends\r\n                          <span className=\"pull-right\">\r\n                            <i className=\"material-icons\">trending_up</i>\r\n                          </span>\r\n                        </li>\r\n                        <li>\r\n                          #materialdesign\r\n                          <span className=\"pull-right\">\r\n                            <i className=\"material-icons\">trending_up</i>\r\n                          </span>\r\n                        </li>\r\n                        <li>#adminbsb</li>\r\n                        <li>#freeadmintemplate</li>\r\n                        <li>#bootstraptemplate</li>\r\n                        <li>\r\n                          #freehtmltemplate\r\n                          <span className=\"pull-right\">\r\n                            <i className=\"material-icons\">trending_up</i>\r\n                          </span>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {/* #END# Latest Social Trends */}\r\n                {/* Answered Tickets */}\r\n                <div className=\"col-xs-12 col-sm-12 col-md-4 col-lg-4\">\r\n                  <div className=\"card\">\r\n                    <div className=\"body bg-teal\">\r\n                      <div className=\"font-bold m-b--35\">ANSWERED TICKETS</div>\r\n                      <ul className=\"dashboard-stat-list\">\r\n                        <li>\r\n                          TODAY\r\n                          <span className=\"pull-right\">\r\n                            <b>12</b> <small>TICKETS</small>\r\n                          </span>\r\n                        </li>\r\n                        <li>\r\n                          YESTERDAY\r\n                          <span className=\"pull-right\">\r\n                            <b>15</b> <small>TICKETS</small>\r\n                          </span>\r\n                        </li>\r\n                        <li>\r\n                          LAST WEEK\r\n                          <span className=\"pull-right\">\r\n                            <b>90</b> <small>TICKETS</small>\r\n                          </span>\r\n                        </li>\r\n                        <li>\r\n                          LAST MONTH\r\n                          <span className=\"pull-right\">\r\n                            <b>342</b> <small>TICKETS</small>\r\n                          </span>\r\n                        </li>\r\n                        <li>\r\n                          LAST YEAR\r\n                          <span className=\"pull-right\">\r\n                            <b>4 225</b> <small>TICKETS</small>\r\n                          </span>\r\n                        </li>\r\n                        <li>\r\n                          ALL\r\n                          <span className=\"pull-right\">\r\n                            <b>8 752</b> <small>TICKETS</small>\r\n                          </span>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {/* #END# Answered Tickets */}\r\n              </div>\r\n              <div className=\"row clearfix\"></div>\r\n            </div>\r\n          </section>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","D:\\xampp\\htdocs\\property-app\\front-app\\src\\components\\PrivateRoute.js",[],"D:\\xampp\\htdocs\\property-app\\front-app\\src\\pages\\ResetPassword.js",["223","224","225"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { Redirect } from 'react-router'\r\n\r\n\r\nexport class ResetPassword extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          page: props.page,\r\n          submitting: false,\r\n          submitted: false,\r\n          failedSubmit: false,\r\n          buttonText:\"RESET MY PASSWORD\",\r\n          fields: {},\r\n          errors: {},\r\n          redirectToSuccess: false,\r\n          email:null,\r\n        };\r\n      }\r\n    componentWillMount(){\r\n        document.getElementById('body').className='fp-page'\r\n        this.setState({email:this.props.match.params.id})\r\n        console.log((this.props.match.params.id));\r\n      }\r\n      handleValidation(){\r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n    \r\n       //Password\r\n        if(!fields[\"password\"]){\r\n           formIsValid = false;\r\n           errors[\"password\"] = \"Password is required.\";\r\n        }\r\n        //Confirm Password\r\n        if(!fields[\"confirm_password\"]){\r\n          formIsValid = false;\r\n          errors[\"confirm_password\"] = \"Confirm Password is required.\";\r\n       }\r\n\r\n       if (typeof fields[\"password\"] !== \"undefined\" && typeof fields[\"confirm_password\"] !== \"undefined\") {\r\n          \r\n        if (fields[\"password\"] != fields[\"confirm_password\"]) {\r\n          formIsValid = false;\r\n          errors[\"password\"] = \"Passwords don't match.\";\r\n        }\r\n      } \r\n    \r\n       this.setState({errors: errors});\r\n       console.log(this.state.errors)\r\n       return formIsValid;\r\n    }\r\n       //--------- Submit Handller \r\n       handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(this.handleValidation()){\r\n          this.setState({\r\n            buttonText: 'Submiting...'\r\n        })\r\n          console.log(this.state.fields);\r\n          axios({\r\n            method: \"POST\", \r\n            url:\"http://157.245.250.121:4100/api/reset_password\", \r\n            data: this.state.fields,\r\n        }).then((response)=>{\r\n          console.log(response)\r\n          if (response.data.message === \"password not reset\") {\r\n              this.setState({ buttonText: \"RESET MY PASSWORD\" });\r\n              NotificationManager.warning('Password not reset please try again.', 'Error');              \r\n          }if(response.data.message === \"password successfully reset\"){\r\n            this.setState({ buttonText: \"RESET MY PASSWORD\" });\r\n            NotificationManager.success('Password successfully reset', 'Success');\r\n            this.setState({ redirectToSuccess: true });\r\n          }\r\n        })\r\n        }\r\n      }\r\n        handleChange(field, e){         \r\n            let fields = this.state.fields;\r\n            \r\n            fields[field] = e.target.value;\r\n            fields['email'] = this.state.email;\r\n            console.log(fields)        \r\n            this.setState({fields});\r\n        }\r\n      \r\n    render() {\r\n      if (this.state.redirectToSuccess) {\r\n        // redirect to home if signed up\r\n        return <Redirect to = {{ pathname: \"/\" }} />;\r\n      }\r\n        return (\r\n            <div className=\"fp-box\">\r\n            <div className=\"logo\">\r\n                <a href=\"javascript:void(0);\">Reset Password</a>\r\n            </div>\r\n            <div className=\"card\">\r\n                <div className=\"body\">\r\n                <form id=\"reset_passwords\" method=\"POST\" onSubmit={ (e) => this.handleSubmit(e)}>\r\n                    <div className=\"msg\">\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                    <span className=\"input-group-addon\">\r\n                        <i className=\"material-icons\">lock</i>\r\n                    </span>\r\n                    <div className={`form-line  ${this.state.errors.password ? 'error focused' : ''}`}>\r\n                        <input \r\n                         type=\"password\" \r\n                         className=\"form-control\"\r\n                         ref=\"password\" \r\n                         placeholder=\"New Password\" \r\n                         value={this.state.fields[\"password\"]} \r\n                         onChange={this.handleChange.bind(this, \"password\")}\r\n                         minLength={6} \r\n                         />\r\n                    </div>\r\n                    <label id=\"password-error\" class=\"error\" for=\"password\">{this.state.errors.password}</label>\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                    <span className=\"input-group-addon\">\r\n                        <i className=\"material-icons\">lock</i>\r\n                    </span>\r\n                    <div className={`form-line  ${this.state.errors.confirm_password ? 'error focused' : ''}`}>\r\n                        <input \r\n                         type=\"password\" \r\n                         className=\"form-control\" \r\n                         ref=\"confirm_password\" \r\n                         placeholder=\"Confirm New Password\" \r\n                         value={this.state.fields[\"confirm_password\"]} \r\n                         onChange={this.handleChange.bind(this, \"confirm_password\")}\r\n                         id=\"confirm_password\"\r\n                         minLength={6} \r\n                         />\r\n                    </div>\r\n                    <label id=\"password-error\" class=\"error\" for=\"password\">{this.state.errors.confirm_password}</label>\r\n                    </div>\r\n        <button className=\"btn btn-block btn-lg bg-pink waves-effect\" type=\"submit\">{this.state.buttonText}</button>\r\n                    <div className=\"row m-t-20 m-b--5 align-center\">\r\n                    <Link to=\"/\">Sign In!</Link>\r\n                    </div>\r\n                </form>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ResetPassword\r\n","D:\\xampp\\htdocs\\property-app\\front-app\\src\\components\\partials\\Sidebar.js",[],"D:\\xampp\\htdocs\\property-app\\front-app\\src\\pages\\Profile.js",["226"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"../components/partials/Header\";\r\nimport Sidebar from \"../components/partials/Sidebar\";\r\nimport axios from \"axios\";\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { Redirect } from 'react-router'\r\n\r\nexport class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      submitting: false,\r\n      submitted: false,\r\n      failedSubmit: false,\r\n      buttonText: \"Submit\",\r\n      fields: {},\r\n      errors: {},\r\n      redirectToSuccess: false,\r\n    };\r\n  }\r\n  componentWillMount() {\r\n    document.getElementById(\"body\").className = \"theme-red\";\r\n  }\r\n  componentDidMount() {\r\n    axios({\r\n      method: \"POST\",\r\n      url: \"http://157.245.250.121:4100/api/company_profile\",\r\n      data: { id: localStorage.getItem(\"id\") },\r\n    }).then((res) => {\r\n      const profileData = res.data;\r\n      this.setState({ fields:profileData });\r\n      console.log(this.state.fields);\r\n    });\r\n  }\r\n\r\n  handleValidation(){\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    //phone\r\n    if(!fields[\"phone_number\"]){\r\n      formIsValid = false;\r\n      errors[\"phone_number\"] = \"Contact Number is required.\";\r\n  }\r\n   //first name\r\n    if(!fields[\"first_name\"]){\r\n      formIsValid = false;\r\n      errors[\"first_name\"] = \"First Name is required.\";\r\n  }\r\n   //last name\r\n   if(!fields[\"last_name\"]){\r\n    formIsValid = false;\r\n    errors[\"last_name\"] = \"Last Name is required.\";\r\n}\r\n //company name\r\n if(!fields[\"company_name\"]){\r\n    formIsValid = false;\r\n    errors[\"company_name\"] = \"Company Name is required.\";\r\n}\r\n \r\n\r\n   this.setState({errors: errors});\r\n   console.log(this.state.errors)\r\n   return formIsValid;\r\n}\r\n \r\n  \r\n    //--------- Submit Handller \r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(this.handleValidation()){\r\n          this.setState({\r\n            buttonText: 'Submiting...'\r\n        })\r\n        \r\n          console.log(this.state.fields);\r\n          axios({\r\n            method: \"POST\", \r\n            url:\"http://157.245.250.121:4100/api/edit_company_profile\", \r\n            data: this.state.fields,\r\n        }).then((response)=>{\r\n          console.log(response)\r\n          if (response.data.message === \"profile not reset\") {\r\n              this.setState({ buttonText: \"Edit Profile\" });\r\n              NotificationManager.warning('Email does not exist.', 'Error');              \r\n          }if(response.data.message === \"profile successfully update\"){\r\n            this.setState({ buttonText: \"Edit Profile\" });\r\n            NotificationManager.success('Profile successfully updated.', 'Success');\r\n            let fullName = this.state.fields.first_name+' '+this.state.fields.last_name;\r\n            localStorage.setItem('name', fullName);\r\n            this.setState({ redirectToSuccess: true }); \r\n          }\r\n            \r\n        })\r\n        }\r\n      }\r\n        handleChange(field, e){         \r\n            let fields = this.state.fields;\r\n            // this.setState(prevState => ({\r\n            //     item: { ...prevState.item,  [e.target.name]: e.target.value }\r\n            //   }))\r\n              fields[field] = e.target.value;\r\n              console.log(fields)        \r\n              this.setState({fields});\r\n        }\r\n\r\n  render() {\r\n    if (this.state.redirectToSuccess) {\r\n        // redirect to home if signed up\r\n        return <Redirect to = {{ pathname: \"/dashboard\" }} />;\r\n      }\r\n    return (\r\n      <>\r\n        <div>\r\n          <div className=\"overlay\" />\r\n          {/* Search Bar */}\r\n          <div className=\"search-bar\">\r\n            <div className=\"search-icon\">\r\n              <i className=\"material-icons\">search</i>\r\n            </div>\r\n            <input type=\"text\" placeholder=\"START TYPING...\" />\r\n            <div className=\"close-search\">\r\n              <i className=\"material-icons\">close</i>\r\n            </div>\r\n          </div>\r\n          {/* #END# Search Bar */}\r\n          {/* Top Bar */}\r\n          <Header />\r\n          {/* #Top Bar */}\r\n          <section>\r\n            {/* Left Sidebar */}\r\n            <Sidebar />\r\n            {/* #END# Right Sidebar */}\r\n          </section>\r\n          <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"block-header\"></div>\r\n              {/* Widgets */}\r\n              <div className=\"row clearfix\">\r\n                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"header\">\r\n                      <h2>Profile</h2>\r\n                    </div>\r\n                    <div className=\"body\">\r\n                      <form\r\n                        method=\"POST\"\r\n                        id=\"form_validation\"\r\n                        className=\"form-horizontal\"\r\n                        onSubmit={(e) => this.handleSubmit(e)}\r\n                      >\r\n                        <div className=\"form-group\">\r\n                          <label\r\n                            htmlFor=\"NameSurname\"\r\n                            className=\"col-sm-2 control-label\"\r\n                          >\r\n                            Company\r\n                          </label>\r\n                          <div className=\"col-sm-10\">\r\n                            <div className=\"form-line\">\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                ref=\"company_name\"\r\n                                placeholder=\"Company Name\"\r\n                                \r\n                                value={this.state.fields.company_name}\r\n                                onChange={this.handleChange.bind(this, \"company_name\")}\r\n                              />\r\n                            </div>\r\n                            <label id=\"password-error\" class=\"error\" for=\"password\">{this.state.errors.company_name}</label>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <label\r\n                            htmlFor=\"NameSurname\"\r\n                            className=\"col-sm-2 control-label\"\r\n                          >\r\n                            First Name\r\n                          </label>\r\n                          <div className=\"col-sm-10\">\r\n                            <div className=\"form-line\">\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                ref=\"first_name\"\r\n                                placeholder=\"First Name\"\r\n                                \r\n                                value={this.state.fields.first_name}\r\n                                onChange={this.handleChange.bind(this, \"first_name\")}\r\n                              />\r\n                            </div>\r\n                            <label id=\"password-error\" class=\"error\" for=\"password\">{this.state.errors.first_name}</label>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <label\r\n                            htmlFor=\"NameSurname\"\r\n                            className=\"col-sm-2 control-label\"\r\n                          >\r\n                            Last Name\r\n                          </label>\r\n                          <div className=\"col-sm-10\">\r\n                            <div className=\"form-line\">\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                ref=\"last_name\"\r\n                                placeholder=\"Last Name\"\r\n                                \r\n                                value={this.state.fields.last_name}\r\n                                onChange={this.handleChange.bind(this, \"last_name\")}\r\n                              />\r\n                            </div>\r\n                            <label id=\"password-error\" class=\"error\" for=\"password\">{this.state.errors.last_name}</label>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <label\r\n                            htmlFor=\"NameSurname\"\r\n                            className=\"col-sm-2 control-label\"\r\n                          >\r\n                            Contact Number\r\n                          </label>\r\n                          <div className=\"col-sm-10\">\r\n                            <div className=\"form-line\">\r\n                              <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                ref=\"phone_number\"\r\n                                placeholder=\"Contact Number\"\r\n                                maxLength={10}\r\n                                value={this.state.fields.phone_number}\r\n                                onChange={this.handleChange.bind(this, \"phone_number\")}\r\n                              />\r\n                            </div>\r\n                            <label id=\"password-error\" class=\"error\" for=\"password\">{this.state.errors.phone_number}</label>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                          <label\r\n                            htmlFor=\"NameSurname\"\r\n                            className=\"col-sm-2 control-label\"\r\n                          >\r\n                            Website\r\n                          </label>\r\n                          <div className=\"col-sm-10\">\r\n                            <div className=\"form-line\">\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                ref=\"website\"\r\n                                placeholder=\"Website\"\r\n                                value={this.state.fields.website}\r\n                                onChange={this.handleChange.bind(this, \"website\")}\r\n                              />\r\n                            </div>\r\n                            <label id=\"password-error\" class=\"error\" for=\"password\">{this.state.errors.website}</label>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <label\r\n                            htmlFor=\"NameSurname\"\r\n                            className=\"col-sm-2 control-label\"\r\n                          >\r\n                            Company ID\r\n                          </label>\r\n                          <div className=\"col-sm-10\">\r\n                            <div className=\"form-line\">\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                ref=\"unique_company_id\"\r\n                                placeholder=\"Unique Company ID\"\r\n                                value={this.state.fields.unique_company_id}\r\n                                onChange={this.handleChange.bind(this, \"unique_company_id\")}\r\n                              />\r\n                            </div>\r\n                            <label id=\"password-error\" class=\"error\" for=\"password\">{this.state.errors.unique_company_id}</label>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <label\r\n                            htmlFor=\"NameSurname\"\r\n                            className=\"col-sm-2 control-label\"\r\n                          >\r\n                            Address One\r\n                          </label>\r\n                          <div className=\"col-sm-10\">\r\n                            <div className=\"form-line\">\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                ref=\"address_one\"\r\n                                placeholder=\"Address One\"\r\n                                value={this.state.fields.address_one}\r\n                                onChange={this.handleChange.bind(this, \"address_one\")}\r\n                              />\r\n                            </div>\r\n                            <label id=\"password-error\" class=\"error\" for=\"password\">{this.state.errors.address_one}</label>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <label\r\n                            htmlFor=\"NameSurname\"\r\n                            className=\"col-sm-2 control-label\"\r\n                          >\r\n                            Address Two\r\n                          </label>\r\n                          <div className=\"col-sm-10\">\r\n                            <div className=\"form-line\">\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                ref=\"address_two\"\r\n                                placeholder=\"Address Two\"\r\n                                value={this.state.fields.address_two}\r\n                                onChange={this.handleChange.bind(this, \"address_two\")}\r\n                              />\r\n                            </div>\r\n                            <label id=\"password-error\" class=\"error\" for=\"password\">{this.state.errors.address_two}</label>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                          <label\r\n                            htmlFor=\"NameSurname\"\r\n                            className=\"col-sm-2 control-label\"\r\n                          >\r\n                            Zip Code\r\n                          </label>\r\n                          <div className=\"col-sm-10\">\r\n                            <div className=\"form-line\">\r\n                              <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                ref=\"zip\"\r\n                                placeholder=\"Zip Code\"\r\n                                maxLength={10}\r\n                                value={this.state.fields.zip}\r\n                                onChange={this.handleChange.bind(this, \"zip\")}\r\n                              />\r\n                            </div>\r\n                            <label id=\"password-error\" class=\"error\" for=\"password\">{this.state.errors.zip}</label>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                          <label\r\n                            htmlFor=\"NameSurname\"\r\n                            className=\"col-sm-2 control-label\"\r\n                          >\r\n                            City\r\n                          </label>\r\n                          <div className=\"col-sm-10\">\r\n                            <div className=\"form-line\">\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                ref=\"city\"\r\n                                placeholder=\"City\"\r\n                                value={this.state.fields.city}\r\n                                onChange={this.handleChange.bind(this, \"city\")}\r\n                              />\r\n                            </div>\r\n                            <label id=\"password-error\" class=\"error\" for=\"password\">{this.state.errors.city}</label>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                          <label\r\n                            htmlFor=\"NameSurname\"\r\n                            className=\"col-sm-2 control-label\"\r\n                          >\r\n                            State\r\n                          </label>\r\n                          <div className=\"col-sm-10\">\r\n                            <div className=\"form-line\">\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                ref=\"state\"\r\n                                placeholder=\"State\"\r\n                                value={this.state.fields.state}\r\n                                onChange={this.handleChange.bind(this, \"state\")}\r\n                              />\r\n                            </div>\r\n                            <label id=\"password-error\" class=\"error\" for=\"password\">{this.state.errors.state}</label>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                          <div className=\"col-sm-offset-2 col-sm-10\">\r\n                            <button type=\"submit\" className=\"btn btn-success\">\r\n                             {this.state.buttonText}\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* #END# Widgets */}\r\n\r\n              <div className=\"row clearfix\"></div>\r\n            </div>\r\n          </section>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","D:\\xampp\\htdocs\\property-app\\front-app\\src\\pages\\Mylookup.js",[],"D:\\xampp\\htdocs\\property-app\\front-app\\src\\pages\\EnterOtp.js",["227","228"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport { Redirect } from 'react-router'\r\n\r\nexport class EnterOtp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      page: props.page,\r\n      submitting: false,\r\n      submitted: false,\r\n      failedSubmit: false,\r\n      buttonText: \"Verify\",\r\n      fields: {},\r\n      errors: {},\r\n      redirectToSuccess: false,\r\n      id:null,\r\n    };\r\n  }\r\n  componentWillMount() {\r\n    document.getElementById(\"body\").className = \"fp-page\";\r\n    this.setState({id:this.props.match.params.id})\r\n    console.log((this.props.match.params.id));\r\n  }\r\n  handleValidation() {\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    //email\r\n  \r\n    if (!fields[\"otp\"]) {\r\n      formIsValid = false;\r\n      errors[\"otp\"] = \"One time password is required.\";\r\n    }\r\n\r\n    this.setState({ errors: errors });\r\n    console.log(this.state.errors);\r\n    return formIsValid;\r\n  }\r\n\r\n  //--------- Submit Handller\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.handleValidation()) {\r\n      this.setState({\r\n        buttonText: \"Verifying...\",\r\n      });\r\n\r\n      console.log(this.state.fields);\r\n      axios({\r\n        method: \"POST\",\r\n        url: \"http://157.245.250.121:4100/api/verify_otp\",\r\n        data: this.state.fields,\r\n      }).then((response) => {\r\n        console.log(response);\r\n        if (response.data.message === \"otp does not match.\") {\r\n          this.setState({ buttonText: \"Verify\" });\r\n          NotificationManager.warning(\"Please Enter Correct OTP.\", \"Error\");\r\n        } else {\r\n          this.setState({ buttonText: \"Verify\" });\r\n          NotificationManager.success( \"Login Successfull.\",\r\n            \"Success\"\r\n          );\r\n            let fullName = response.data.userinfo.first_name+' '+response.data.userinfo.last_name;\r\n            let emailID = response.data.userinfo.email;\r\n            let id = response.data.userinfo.id;\r\n            localStorage.setItem('name', fullName);\r\n            localStorage.setItem('email', emailID);\r\n            localStorage.setItem('id', id);\r\n            this.setState({ redirectToSuccess: true });\r\n         \r\n        }\r\n      });\r\n    }\r\n  };\r\n  handleChange(field, e) {\r\n    let fields = this.state.fields;\r\n    fields[field] = e.target.value;\r\n    fields['id'] = this.state.id;\r\n\r\n    console.log(fields);\r\n    this.setState({ fields });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirectToSuccess) {\r\n      // redirect to home if signed up\r\n      return <Redirect to = {{ pathname: \"/dashboard\" }} />;\r\n    }\r\n    return (\r\n      <div className=\"fp-box\">\r\n        <div className=\"logo\">\r\n          <a href=\"javascript:void(0);\">ENTER OTP</a>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"body\">\r\n            <form\r\n              id=\"forgot_passwords\"\r\n              method=\"POST\"\r\n              onSubmit={(e) => this.handleSubmit(e)}\r\n            >\r\n              <div className=\"msg\"></div>\r\n              <div className=\"input-group\">\r\n                <span className=\"input-group-addon\">\r\n                  <i className=\"material-icons\">email</i>\r\n                </span>\r\n                <div\r\n                  className={`form-line  ${\r\n                    this.state.errors.email ? \"error focused\" : \"\"\r\n                  }`}\r\n                >\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    ref=\"otp\"\r\n                    placeholder=\"Enter OTP\"\r\n                    value={this.state.fields[\"otp\"]}\r\n                    onChange={this.handleChange.bind(this, \"otp\")}\r\n                  />\r\n                </div>\r\n                <label id=\"password-error\" class=\"error\" for=\"password\">\r\n                  {this.state.errors.otp}\r\n                </label>\r\n              </div>\r\n              <button\r\n                className=\"btn btn-block btn-lg bg-pink waves-effect\"\r\n                type=\"submit\"\r\n              >\r\n                {this.state.buttonText}\r\n              </button>\r\n              <div className=\"row m-t-20 m-b--5 align-center\">\r\n                <Link to=\"/\">Sign In!</Link>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EnterOtp;\r\n","D:\\xampp\\htdocs\\property-app\\front-app\\src\\pages\\AddEditLookups.js",[],"D:\\xampp\\htdocs\\property-app\\front-app\\src\\pages\\LoginDesign.js",["229","230","231","232","233"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from 'react-router'\r\nimport {Link} from \"react-router-dom\";\r\n// React Notification\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\n\r\nexport class LoginDesign extends Component {\r\n    componentWillMount(){\r\n        // document.getElementById('body').className='login-page'\r\n         document.getElementById('body').className='l'\r\n       }\r\n       constructor(props){\r\n         super(props);\r\n         this.state = {\r\n           page: props.page,\r\n           submitting: false,\r\n           submitted: false,\r\n           failedSubmit: false,\r\n           buttonText:\"Submit\",\r\n           fields: {},\r\n           errors: {},\r\n           redirectToSuccess: false,\r\n         };\r\n       }\r\n       handleValidation(){\r\n         let fields = this.state.fields;\r\n         let errors = {};\r\n         let formIsValid = true;\r\n     \r\n        //email\r\n         if(!fields[\"email\"]){\r\n            formIsValid = false;\r\n            errors[\"email\"] = \"Email is required.\";\r\n         }\r\n         if (typeof fields[\"email\"] !== \"undefined\") {\r\n               \r\n           var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n           if (!pattern.test(fields[\"email\"])) {\r\n             formIsValid = false;\r\n             errors[\"email\"] = \"Please enter valid email address.\";\r\n           }\r\n         }\r\n         //Confirm Password\r\n         if(!fields[\"password\"]){\r\n           formIsValid = false;\r\n           errors[\"password\"] = \"Password is required.\";\r\n        }\r\n     \r\n        this.setState({errors: errors});\r\n        console.log(this.state.errors)\r\n        return formIsValid;\r\n     }\r\n          \r\n             //--------- Submit Handller \r\n             handleSubmit = (e) => {\r\n               e.preventDefault()\r\n               if(this.handleValidation()){\r\n                 this.setState({\r\n                   buttonText: 'Submiting...'\r\n               })\r\n               \r\n                 console.log(this.state.fields);\r\n                 return false;\r\n                 axios({\r\n                   method: \"POST\", \r\n                   url:\"http://157.245.250.121:4100/api/login\", \r\n                   data: this.state.fields,\r\n               }).then((response)=>{\r\n                 console.log(response)\r\n                 // if (response.data.message === \"login sucessfully\") {\r\n                 //     NotificationManager.success('Successfully login.', 'Success');\r\n                 // //     setTimeout(function(){\r\n                       \r\n                 // // }, 2000)\r\n                 // let fullName = response.data.userinfo.first_name+' '+response.data.userinfo.last_name;\r\n                 // let emailID = response.data.userinfo.email;\r\n                 // let id = response.data.userinfo.id;\r\n                 // localStorage.setItem('name', fullName);\r\n                 // localStorage.setItem('email', emailID);\r\n                 // localStorage.setItem('id', id);\r\n                 // this.setState({ redirectToSuccess: true });\r\n                 \r\n                 // }else{\r\n                 //   NotificationManager.warning('Please enter valid credentials.', 'Error');\r\n                     \r\n                 // }\r\n                 if(response.data.message === \"otp successfully updated\"){\r\n                   NotificationManager.success('OPT Successfully send to your email id.', 'Success');\r\n                   let id = response.data.userinfo.id;\r\n                   localStorage.setItem('id', id);\r\n                   this.setState({ redirectToSuccess: true });\r\n                 }else{\r\n                   NotificationManager.warning('Please enter valid credentials.', 'Error');\r\n                 }\r\n                   \r\n               })\r\n               }\r\n             }\r\n               handleChange(field, e){         \r\n                   let fields = this.state.fields;\r\n                   \r\n                   if(e.target.files){\r\n                     fields[field] = e.target.files[0];\r\n                   }else{\r\n                     fields[field] = e.target.value;\r\n                   }\r\n                   console.log(fields)        \r\n                   this.setState({fields});\r\n               }\r\n    render() {\r\n        return (\r\n                  <>\r\n     <div className=\"wrapper\">\r\n  <header className=\"tophdr\">\r\n    <div className=\"brand\">\r\n      <a href=\"javascript:void(0)\"><img src=\"common/images/logo.png\" alt=\"brand\" /></a>\r\n    </div>\r\n  </header>\r\n  <main role=\"main\" className=\"contentarea\">\r\n    <section className=\"formsection\">\r\n      <div className=\"d-flex justify-content-between pl-3 pr-3 marginemoji\">\r\n        <div className=\"emojione emoji\">\r\n          <img src=\"common/images/emoji01.png\" alt=\"emoji\" />\r\n        </div>\r\n        <div className=\"emojitwo\">\r\n          <img src=\"common/images/emoji02.png\" alt=\"emoji\" />\r\n        </div>\r\n        <div className=\"emoji\">\r\n          <img src=\"common/images/emoji03.png\" alt=\"emoji\" />\r\n        </div>\r\n        <div className=\"emojitwo\">\r\n          <img src=\"common/images/emoji04.png\" alt=\"emoji\" />\r\n        </div>\r\n        <div className=\"emoji emojilast\">\r\n          <img src=\"common/images/emoji05.png\" alt=\"emoji\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"container\">\r\n        <div className=\"formcenter\">\r\n          <form className=\"form-group\" method=\"POST\" onSubmit={ (e) => this.handleSubmit(e)}>\r\n            <h2 className=\"text-center logincent\">Login</h2>\r\n            <div className=\"form-group\">\r\n              <label>Username</label>\r\n              <input\r\n                type=\"text\" \r\n                className=\"form-control\" \r\n                ref=\"email\" \r\n                placeholder=\"Email\" \r\n                value={this.state.fields[\"email\"]} \r\n                onChange={this.handleChange.bind(this, \"email\")}\r\n              />\r\n            </div>\r\n            <label id=\"email-error\" class=\"error\" for=\"email\">{this.state.errors.email}</label>\r\n            <div className=\"form-group\">\r\n              <label>Password</label>\r\n              <input \r\n                  type=\"password\" \r\n                  className=\"form-control\" \r\n                  ref=\"password\" \r\n                  placeholder=\"Password\" \r\n                  value={this.state.fields[\"password\"]} \r\n                  onChange={this.handleChange.bind(this, \"password\")}\r\n              />\r\n              <div className=\"form-group text-right\">\r\n                <span>Forgot Password?</span>\r\n              </div>\t\t\t\t\t\t\r\n            </div>\r\n            <label id=\"password-error\" class=\"error\" for=\"password\">{this.state.errors.password}</label>\r\n            <div className=\"form-group text-center\">\r\n              <button type=\"submit\" className=\"btndanger\">Login</button>\r\n            </div>\r\n            <div className=\"form-group text-center regis\">\r\n              <Link to=\"register\">Register</Link>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </section>\t\r\n  </main>\r\n</div>\r\n</>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginDesign\r\n","D:\\xampp\\htdocs\\property-app\\front-app\\src\\pages\\Lookups.js",["234","235"],"// import React, { useState, useEffect } from 'react';\r\n// import DataTable,{ createTheme } from 'react-data-table-component';\r\n// import axios from 'axios';\r\n// import Header from \"../components/partials/Header\";\r\n// import Sidebar from \"../components/partials/Sidebar\";\r\n// import { Link } from \"react-router-dom\";\r\n// document.body.classList.remove('signup-page');\r\n// document.body.classList.add('theme-red');\r\n// const columns = [\r\n\r\n//     {\r\n//       name: 'First Name',\r\n//       selector: 'first_name',\r\n//       sortable: true\r\n//     },\r\n//     {\r\n//       name: 'Last Name',\r\n//       selector: 'last_name',\r\n//       sortable: true\r\n//     },\r\n//     {\r\n//         name: 'City',\r\n//         selector: 'city',\r\n//         sortable: true\r\n//       },\r\n//       {\r\n//         name: 'State',\r\n//         selector: 'state',\r\n//         sortable: true\r\n//       },\r\n//       {\r\n//         name: 'Address',\r\n//         selector: 'address_one',\r\n//         sortable: true\r\n//       },\r\n//       {\r\n//         name: 'Address Two',\r\n//         selector: 'address_two',\r\n//         sortable: true\r\n//       },\r\n//       {\r\n//         name: 'Address Two',\r\n//         selector: 'address_two',\r\n//         sortable: true\r\n//       },\r\n//       {\r\n//         name: 'Address Three',\r\n//         selector: 'address_three',\r\n//         sortable: true\r\n//       },\r\n//       {\r\n//         name: 'Email',\r\n//         selector: 'email_one',\r\n//         sortable: true\r\n//       },\r\n//       {\r\n//         name: 'Email Two',\r\n//         selector: 'email_two',\r\n//         sortable: true\r\n//       },\r\n//       {\r\n//         name: 'Email Three',\r\n//         selector: 'email_three',\r\n//         sortable: true\r\n//       },\r\n//       {\r\n//         name: 'Phone',\r\n//         selector: 'phone_one',\r\n//         sortable: true\r\n//       },\r\n//       {\r\n//         name: 'Created At',\r\n//         selector: 'created_at',\r\n//         sortable: true\r\n//       },\r\n//       {\r\n//         name: 'Reviews',\r\n//         selector: 'created_at',\r\n//         sortable: true\r\n//       }\r\n//   ];\r\n\r\n// const Lookups = () => {\r\n//     const [users, setUsers] = useState({});\r\n//   const [page, setPage] = useState(1);\r\n//   const countPerPage = 1;\r\n//   console.log(users.total)\r\n//   const getUserList = () => {\r\n//     axios.get(`http://157.245.250.121:4100/api/get_looups?page=${page}&perPage=${countPerPage}`).then(res => {\r\n//       setUsers(res.data);\r\n//     }).catch(err => {\r\n//       setUsers({});\r\n//     });\r\n//   }\r\n \r\n//   useEffect(() => {\r\n//     getUserList();\r\n//   }, [page]);\r\n\r\n//     return (\r\n//         <>\r\n//         <div>\r\n//           <div className=\"overlay\" />\r\n//           {/* Search Bar */}\r\n//           <div className=\"search-bar\">\r\n//             <div className=\"search-icon\">\r\n//               <i className=\"material-icons\">search</i>\r\n//             </div>\r\n//             <input type=\"text\" placeholder=\"START TYPING...\" />\r\n//             <div className=\"close-search\">\r\n//               <i className=\"material-icons\">close</i>\r\n//             </div>\r\n//           </div>\r\n//           {/* #END# Search Bar */}\r\n//           {/* Top Bar */}\r\n//           <Header />\r\n//           {/* #Top Bar */}\r\n//           <section>\r\n//             {/* Left Sidebar */}\r\n//             <Sidebar />\r\n//             {/* #END# Right Sidebar */}\r\n//           </section>\r\n//           <section className=\"content\">\r\n//             <div className=\"container-fluid\">\r\n//               <div className=\"block-header\"></div>\r\n//               {/* Widgets */}\r\n//               <div className=\"row clearfix\">\r\n//                 <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n//                   <div className=\"card\">\r\n//                     <div className=\"header\">\r\n//                       <h2>My Lookups</h2>\r\n//                       <p></p>\r\n//                       <Link to=\"/addedit-lookup\">\r\n//                       <button title=\"Add Lookups\" type=\"button\" class=\"btn bg-indigo btn-circle waves-effect waves-circle waves-float\">\r\n//                                     <i class=\"material-icons\">add</i>\r\n//                                 </button>\r\n//                                 </Link>\r\n//                       <ul class=\"header-dropdown m-r--5\">\r\n                      \r\n//                             </ul>\r\n//                     </div>\r\n//                     <div className=\"body\">\r\n//                       <div className=\"table-responsive\">\r\n//                       <DataTable\r\n//                             title=\"My Lookups\"\r\n//                             columns={columns}\r\n//                             data={users.data}\r\n//                             highlightOnHover\r\n//                             pagination\r\n//                             paginationServer\r\n//                             paginationTotalRows={users.total}\r\n//                             paginationPerPage={countPerPage}\r\n//                             paginationComponentOptions={{\r\n//                             noRowsPerPage: true\r\n//                             }}\r\n//                             onChangePage={page => setPage(page)}\r\n//                         />\r\n//                       </div>\r\n//                     </div>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//               {/* #END# Widgets */}\r\n\r\n//               <div className=\"row clearfix\"></div>\r\n//             </div>\r\n//           </section>\r\n//         </div>\r\n//       </>\r\n//     )\r\n// }\r\n\r\n// export default Lookups\r\n","D:\\xampp\\htdocs\\property-app\\front-app\\src\\pages\\ChangePassword.js",["236","237"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"../components/partials/Header\";\r\nimport Sidebar from \"../components/partials/Sidebar\";\r\nimport axios from \"axios\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nexport class ChangePassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          submitting: false,\r\n          submitted: false,\r\n          failedSubmit: false,\r\n          buttonText: \"Submit\",\r\n          fields: {},\r\n          errors: {},\r\n          redirectToSuccess: false,\r\n          id: null,\r\n        };\r\n      }\r\n      componentWillMount() {\r\n        document.getElementById(\"body\").className = \"theme-red\";\r\n        this.setState({ id: localStorage.getItem('id') });\r\n      }\r\n\r\n    \r\n      handleValidation() {\r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n    \r\n        if (!fields[\"old_password\"]) {\r\n          formIsValid = false;\r\n          errors[\"old_password\"] = \"Old Password is required.\";\r\n        }\r\n        if(!fields[\"password\"]){\r\n            formIsValid = false;\r\n            errors[\"password\"] = \"Password is required.\";\r\n         }\r\n         //Confirm Password\r\n         if(!fields[\"confirm_password\"]){\r\n           formIsValid = false;\r\n           errors[\"confirm_password\"] = \"Confirm Password is required.\";\r\n        }\r\n \r\n        if (typeof fields[\"password\"] !== \"undefined\" && typeof fields[\"confirm_password\"] !== \"undefined\") {\r\n           \r\n         if (fields[\"password\"] != fields[\"confirm_password\"]) {\r\n           formIsValid = false;\r\n           errors[\"password\"] = \"Passwords don't match.\";\r\n         }\r\n       } \r\n    \r\n        this.setState({ errors: errors });\r\n        console.log(this.state.errors);\r\n        return formIsValid;\r\n      }\r\n    \r\n      //--------- Submit Handller\r\n      handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (this.handleValidation()) {\r\n          this.setState({\r\n            buttonText: \"Submiting...\",\r\n          });\r\n    \r\n          console.log(this.state.fields);\r\n            axios({\r\n              method: \"POST\",\r\n              url: \"http://157.245.250.121:4100/api/change_password\",\r\n              data: this.state.fields,\r\n            }).then((response) => {\r\n              console.log(response);\r\n              if (response.data.message === \"The password you have entered does not match your current one.\") {\r\n                NotificationManager.warning(\r\n                  \"Please Enter Correct Old Password\",\r\n                  \"Error\"\r\n                );\r\n                this.setState({\r\n                    buttonText: \"Submit\",\r\n                  });\r\n              }\r\n              if (response.data === \"password successfully updated\") {\r\n                NotificationManager.success(\r\n                  \"Password successfully change.\",\r\n                  \"Success\"\r\n                );\r\n                this.setState({\r\n                    buttonText: \"Submit\",\r\n                  });\r\n                this.setState({ redirectToSuccess: true });\r\n              }\r\n            });\r\n          \r\n        }\r\n      };\r\n      handleChange(field, e) {\r\n        let fields = this.state.fields;\r\n        fields[field] = e.target.value;\r\n        fields[\"id\"] = this.state.id\r\n        console.log(fields);\r\n        this.setState({ fields });\r\n      }\r\n    render() {\r\n        if (this.state.redirectToSuccess) {\r\n            // redirect to home if signed up\r\n            return <Redirect to = {{ pathname: \"/dashboard\" }} />;\r\n          }\r\n        return (\r\n            <>\r\n            <div>\r\n              <div className=\"overlay\" />\r\n              {/* Search Bar */}\r\n              <div className=\"search-bar\">\r\n                <div className=\"search-icon\">\r\n                  <i className=\"material-icons\">search</i>\r\n                </div>\r\n                <input type=\"text\" placeholder=\"START TYPING...\" />\r\n                <div className=\"close-search\">\r\n                  <i className=\"material-icons\">close</i>\r\n                </div>\r\n              </div>\r\n              {/* #END# Search Bar */}\r\n              {/* Top Bar */}\r\n              <Header />\r\n              {/* #Top Bar */}\r\n              <section>\r\n                {/* Left Sidebar */}\r\n                <Sidebar />\r\n                {/* #END# Right Sidebar */}\r\n              </section>\r\n              <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                  <div className=\"block-header\"></div>\r\n                  {/* Widgets */}\r\n                  <div className=\"row clearfix\">\r\n                    <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                      <div className=\"card\">\r\n                        <div className=\"header\">\r\n                          <h2>Change Password</h2>\r\n                          <ul class=\"header-dropdown m-r--5\"></ul>\r\n                        </div>\r\n                        <div className=\"body\">\r\n                          <form\r\n                            method=\"POST\"\r\n                            id=\"form_validation\"\r\n                            className=\"form-horizontal\"\r\n                            onSubmit={(e) => this.handleSubmit(e)}\r\n                          >\r\n                            <div className=\"form-group\">\r\n                              <label\r\n                                htmlFor=\"NameSurname\"\r\n                                className=\"col-sm-2 control-label\"\r\n                              >\r\n                                Old Password\r\n                              </label>\r\n                              <div className=\"col-sm-10\">\r\n                                <div className=\"form-line\">\r\n                                  <input \r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    ref=\"old_password\"\r\n                                    placeholder=\"Old Password\"\r\n                                    value={this.state.fields.old_password}\r\n                                    onChange={this.handleChange.bind(\r\n                                      this,\r\n                                      \"old_password\"\r\n                                    )}\r\n                                  />\r\n                                </div>\r\n                                <label\r\n                                  id=\"password-error\"\r\n                                  class=\"error\"\r\n                                  for=\"password\"\r\n                                >\r\n                                  {this.state.errors.old_password}\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                              <label\r\n                                htmlFor=\"NameSurname\"\r\n                                className=\"col-sm-2 control-label\"\r\n                              >\r\n                                New Password\r\n                              </label>\r\n                              <div className=\"col-sm-10\">\r\n                                <div className=\"form-line\">\r\n                                  <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    ref=\"password\"\r\n                                    placeholder=\"New Password\"\r\n                                    value={this.state.fields.password}\r\n                                    onChange={this.handleChange.bind(\r\n                                      this,\r\n                                      \"password\"\r\n                                    )}\r\n                                  />\r\n                                </div>\r\n                                <label\r\n                                  id=\"password-error\"\r\n                                  class=\"error\"\r\n                                  for=\"password\"\r\n                                >\r\n                                  {this.state.errors.password}\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                              <label\r\n                                htmlFor=\"NameSurname\"\r\n                                className=\"col-sm-2 control-label\"\r\n                              >\r\n                                Confim Password\r\n                              </label>\r\n                              <div className=\"col-sm-10\">\r\n                                <div className=\"form-line\">\r\n                                  <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    ref=\"confirm_password\"\r\n                                    placeholder=\"Confim Password\"\r\n                                    value={this.state.fields.confirm_password}\r\n                                    onChange={this.handleChange.bind(\r\n                                      this,\r\n                                      \"confirm_password\"\r\n                                    )}\r\n                                  />\r\n                                </div>\r\n                                <label\r\n                                  id=\"password-error\"\r\n                                  class=\"error\"\r\n                                  for=\"password\"\r\n                                >\r\n                                  {this.state.errors.confirm_password}\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                           \r\n    \r\n                            <div className=\"form-group\">\r\n                              <div className=\"col-sm-offset-2 col-sm-10\">\r\n                                <button type=\"submit\" className=\"btn btn-success\">\r\n                                  {this.state.buttonText}\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </form>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  {/* #END# Widgets */}\r\n    \r\n                  <div className=\"row clearfix\"></div>\r\n                </div>\r\n              </section>\r\n            </div>\r\n          </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChangePassword\r\n","D:\\xampp\\htdocs\\property-app\\front-app\\src\\pages\\DoAlookup.js",["238"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"../components/partials/Header\";\r\nimport Sidebar from \"../components/partials/Sidebar\";\r\nimport axios from \"axios\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nexport class DoAlookup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      submitting: false,\r\n      submitted: false,\r\n      failedSubmit: false,\r\n      buttonText: \"Submit\",\r\n      fields: {},\r\n      errors: {},\r\n      redirectToSuccess: false,\r\n      id: null,\r\n    };\r\n  }\r\n  componentWillMount() {\r\n    document.getElementById(\"body\").className = \"theme-red\";\r\n    this.setState({ id: this.props.match.params.id });\r\n    console.log(this.props.match.params.id);\r\n  }\r\n  componentDidMount() {\r\n    if (this.state.id != null) {\r\n      axios({\r\n        method: \"POST\",\r\n        url: \"http://157.245.250.121:4100/api/lookup_data\",\r\n        data: { id: this.state.id },\r\n      }).then((res) => {\r\n        const profileData = res.data[0];\r\n        this.setState({ fields: profileData });\r\n        console.log(this.state.fields);\r\n      });\r\n    }\r\n  }\r\n\r\n  handleValidation() {\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    //first name\r\n    if (!fields[\"first_name\"]) {\r\n      formIsValid = false;\r\n      errors[\"first_name\"] = \"First Name is required.\";\r\n    }\r\n    //last name\r\n    if (!fields[\"last_name\"]) {\r\n      formIsValid = false;\r\n      errors[\"last_name\"] = \"Last Name is required.\";\r\n    }\r\n    if (!fields[\"country\"]) {\r\n        formIsValid = false;\r\n        errors[\"country\"] = \"Country is required.\";\r\n      }\r\n    if (!fields[\"zip\"]) {\r\n      formIsValid = false;\r\n      errors[\"zip\"] = \"Zip is required.\";\r\n    }\r\n    if (!fields[\"city\"]) {\r\n      formIsValid = false;\r\n      errors[\"city\"] = \"City is required.\";\r\n    }\r\n    if (!fields[\"state\"]) {\r\n      formIsValid = false;\r\n      errors[\"state\"] = \"State is required.\";\r\n    }\r\n    if (!fields[\"address_one\"]) {\r\n      formIsValid = false;\r\n      errors[\"address_one\"] = \"Address is required.\";\r\n    }\r\n    if (!fields[\"email\"]) {\r\n      formIsValid = false;\r\n      errors[\"email\"] = \"Email is required.\";\r\n    }\r\n    if (typeof fields[\"email\"] !== \"undefined\") {\r\n      var pattern = new RegExp(\r\n        /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\r\n      );\r\n      if (!pattern.test(fields[\"email\"])) {\r\n        formIsValid = false;\r\n        errors[\"email\"] = \"Please enter valid email address.\";\r\n      }\r\n    }\r\n    if (!fields[\"phone_number\"]) {\r\n      formIsValid = false;\r\n      errors[\"phone_number\"] = \"Contact Number is required.\";\r\n    }\r\n\r\n    this.setState({ errors: errors });\r\n    console.log(this.state.errors);\r\n    return formIsValid;\r\n  }\r\n\r\n  //--------- Submit Handller\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.handleValidation()) {\r\n      this.setState({\r\n        buttonText: \"Submiting...\",\r\n      });\r\n\r\n      console.log(this.state.fields);\r\n\r\n        console.log(\"gg\");\r\n        console.log(this.state.fields);\r\n        axios({\r\n          method: \"POST\",\r\n          url: \"http://157.245.250.121:4100/api/do_a_lookup\",\r\n          data: this.state.fields,\r\n        }).then((response) => {\r\n          console.log(response);\r\n          this.setState({\r\n            buttonText: \"Submit\",\r\n          });\r\n          if (response.data.result === \"success\") {\r\n            NotificationManager.success(\r\n              \"Do a lookup successfully added.\",\r\n              \"Success\"\r\n            );\r\n            this.setState({ redirectToSuccess: true });\r\n          } else {\r\n            this.setState({ buttonText: \"Edit Lookup\" });\r\n            NotificationManager.warning(\r\n              \"Internal Server Error Please Try After Some Time.\",\r\n              \"Error\"\r\n            );\r\n            this.setState({ redirectToSuccess: true });\r\n          }\r\n        });\r\n      \r\n    }\r\n  };\r\n  handleChange(field, e) {\r\n    let fields = this.state.fields;\r\n    // this.setState(prevState => ({\r\n    //     item: { ...prevState.item,  [e.target.name]: e.target.value }\r\n    //   }))\r\n    fields[field] = e.target.value;\r\n    console.log(fields);\r\n    this.setState({ fields });\r\n  }\r\n  render() {\r\n    if (this.state.redirectToSuccess) {\r\n        // redirect to home if signed up\r\n        return <Redirect to = {{ pathname: \"/dashboard\" }} />;\r\n      }\r\n    return (\r\n      <>\r\n        <div>\r\n          <div className=\"overlay\" />\r\n          {/* Search Bar */}\r\n          <div className=\"search-bar\">\r\n            <div className=\"search-icon\">\r\n              <i className=\"material-icons\">search</i>\r\n            </div>\r\n            <input type=\"text\" placeholder=\"START TYPING...\" />\r\n            <div className=\"close-search\">\r\n              <i className=\"material-icons\">close</i>\r\n            </div>\r\n          </div>\r\n          {/* #END# Search Bar */}\r\n          {/* Top Bar */}\r\n          <Header />\r\n          {/* #Top Bar */}\r\n          <section>\r\n            {/* Left Sidebar */}\r\n            <Sidebar />\r\n            {/* #END# Right Sidebar */}\r\n          </section>\r\n          <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"block-header\"></div>\r\n              {/* Widgets */}\r\n              <div className=\"row clearfix\">\r\n                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"header\">\r\n                      <h2>{this.state.id ? \"Edit Lookup\" : \"Do a lookup\"}</h2>\r\n                      {/* <p></p>\r\n                      <Link to=\"/my-lookup\">\r\n                        <button\r\n                          title=\"Add Lookups\"\r\n                          type=\"button\"\r\n                          class=\"btn bg-indigo btn-circle waves-effect waves-circle waves-float\"\r\n                        >\r\n                          <i class=\"material-icons\">keyboard_backspace</i>\r\n                        </button>\r\n                      </Link> */}\r\n                      <ul class=\"header-dropdown m-r--5\"></ul>\r\n                    </div>\r\n                    <div className=\"body\">\r\n                      <form\r\n                        method=\"POST\"\r\n                        id=\"form_validation\"\r\n                        className=\"form-horizontal\"\r\n                        onSubmit={(e) => this.handleSubmit(e)}\r\n                      >\r\n                        <div className=\"form-group\">\r\n                          <label\r\n                            htmlFor=\"NameSurname\"\r\n                            className=\"col-sm-2 control-label\"\r\n                          >\r\n                            First Name\r\n                          </label>\r\n                          <div className=\"col-sm-10\">\r\n                            <div className=\"form-line\">\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                ref=\"first_name\"\r\n                                placeholder=\"First Name\"\r\n                                value={this.state.fields.first_name}\r\n                                onChange={this.handleChange.bind(\r\n                                  this,\r\n                                  \"first_name\"\r\n                                )}\r\n                              />\r\n                            </div>\r\n                            <label\r\n                              id=\"password-error\"\r\n                              class=\"error\"\r\n                              for=\"password\"\r\n                            >\r\n                              {this.state.errors.first_name}\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <label\r\n                            htmlFor=\"NameSurname\"\r\n                            className=\"col-sm-2 control-label\"\r\n                          >\r\n                            Last Name\r\n                          </label>\r\n                          <div className=\"col-sm-10\">\r\n                            <div className=\"form-line\">\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                ref=\"last_name\"\r\n                                placeholder=\"Last Name\"\r\n                                value={this.state.fields.last_name}\r\n                                onChange={this.handleChange.bind(\r\n                                  this,\r\n                                  \"last_name\"\r\n                                )}\r\n                              />\r\n                            </div>\r\n                            <label\r\n                              id=\"password-error\"\r\n                              class=\"error\"\r\n                              for=\"password\"\r\n                            >\r\n                              {this.state.errors.last_name}\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <label\r\n                            htmlFor=\"NameSurname\"\r\n                            className=\"col-sm-2 control-label\"\r\n                          >\r\n                            Email\r\n                          </label>\r\n                          <div className=\"col-sm-10\">\r\n                            <div className=\"form-line\">\r\n                              <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                ref=\"email\"\r\n                                placeholder=\"Email\"\r\n                                value={this.state.fields.email}\r\n                                onChange={this.handleChange.bind(this, \"email\")}\r\n                              />\r\n                            </div>\r\n                            <label\r\n                              id=\"password-error\"\r\n                              class=\"error\"\r\n                              for=\"password\"\r\n                            >\r\n                              {this.state.errors.email}\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <label\r\n                            htmlFor=\"NameSurname\"\r\n                            className=\"col-sm-2 control-label\"\r\n                          >\r\n                            Phone\r\n                          </label>\r\n                          <div className=\"col-sm-10\">\r\n                            <div className=\"form-line\">\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                ref=\"phone_number\"\r\n                                placeholder=\"Phone Number\"\r\n                                value={this.state.fields.phone_number}\r\n                                onChange={this.handleChange.bind(\r\n                                  this,\r\n                                  \"phone_number\"\r\n                                )}\r\n                              />\r\n                            </div>\r\n                            <label\r\n                              id=\"password-error\"\r\n                              class=\"error\"\r\n                              for=\"password\"\r\n                            >\r\n                              {this.state.errors.phone_number}\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <label\r\n                            htmlFor=\"NameSurname\"\r\n                            className=\"col-sm-2 control-label\"\r\n                          >\r\n                            Address One\r\n                          </label>\r\n                          <div className=\"col-sm-10\">\r\n                            <div className=\"form-line\">\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                ref=\"address_one\"\r\n                                placeholder=\"Address One\"\r\n                                value={this.state.fields.address_one}\r\n                                onChange={this.handleChange.bind(\r\n                                  this,\r\n                                  \"address_one\"\r\n                                )}\r\n                              />\r\n                            </div>\r\n                            <label\r\n                              id=\"password-error\"\r\n                              class=\"error\"\r\n                              for=\"password\"\r\n                            >\r\n                              {this.state.errors.address_one}\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <label\r\n                            htmlFor=\"NameSurname\"\r\n                            className=\"col-sm-2 control-label\"\r\n                          >\r\n                            Address Two\r\n                          </label>\r\n                          <div className=\"col-sm-10\">\r\n                            <div className=\"form-line\">\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                ref=\"address_two\"\r\n                                placeholder=\"Address Two\"\r\n                                value={this.state.fields.address_two}\r\n                                onChange={this.handleChange.bind(\r\n                                  this,\r\n                                  \"address_two\"\r\n                                )}\r\n                              />\r\n                            </div>\r\n                            <label\r\n                              id=\"password-error\"\r\n                              class=\"error\"\r\n                              for=\"password\"\r\n                            >\r\n                              {this.state.errors.address_two}\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <label\r\n                            htmlFor=\"NameSurname\"\r\n                            className=\"col-sm-2 control-label\"\r\n                          >\r\n                            Zip\r\n                          </label>\r\n                          <div className=\"col-sm-10\">\r\n                            <div className=\"form-line\">\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                ref=\"zip\"\r\n                                placeholder=\"Zip\"\r\n                                value={this.state.fields.zip}\r\n                                onChange={this.handleChange.bind(this, \"zip\")}\r\n                              />\r\n                            </div>\r\n                            <label\r\n                              id=\"password-error\"\r\n                              class=\"error\"\r\n                              for=\"password\"\r\n                            >\r\n                              {this.state.errors.zip}\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <label\r\n                            htmlFor=\"NameSurname\"\r\n                            className=\"col-sm-2 control-label\"\r\n                          >\r\n                            City\r\n                          </label>\r\n                          <div className=\"col-sm-10\">\r\n                            <div className=\"form-line\">\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                ref=\"city\"\r\n                                placeholder=\"City\"\r\n                                value={this.state.fields.city}\r\n                                onChange={this.handleChange.bind(this, \"city\")}\r\n                              />\r\n                            </div>\r\n                            <label\r\n                              id=\"password-error\"\r\n                              class=\"error\"\r\n                              for=\"password\"\r\n                            >\r\n                              {this.state.errors.city}\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                          <label\r\n                            htmlFor=\"NameSurname\"\r\n                            className=\"col-sm-2 control-label\"\r\n                          >\r\n                            State\r\n                          </label>\r\n                          <div className=\"col-sm-10\">\r\n                            <div className=\"form-line\">\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                ref=\"state\"\r\n                                placeholder=\"State\"\r\n                                value={this.state.fields.state}\r\n                                onChange={this.handleChange.bind(this, \"state\")}\r\n                              />\r\n                            </div>\r\n                            <label\r\n                              id=\"password-error\"\r\n                              class=\"error\"\r\n                              for=\"password\"\r\n                            >\r\n                              {this.state.errors.state}\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                          <label\r\n                            htmlFor=\"NameSurname\"\r\n                            className=\"col-sm-2 control-label\"\r\n                          >\r\n                            Country\r\n                          </label>\r\n                          <div className=\"col-sm-10\">\r\n                            <div className=\"form-line\">\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                ref=\"country\"\r\n                                placeholder=\"Country\"\r\n                                value={this.state.fields.country}\r\n                                onChange={this.handleChange.bind(\r\n                                  this,\r\n                                  \"country\"\r\n                                )}\r\n                              />\r\n                            </div>\r\n                            <label\r\n                              id=\"password-error\"\r\n                              class=\"error\"\r\n                              for=\"password\"\r\n                            >\r\n                              {this.state.errors.country}\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                          <div className=\"col-sm-offset-2 col-sm-10\">\r\n                            <button type=\"submit\" className=\"btn btn-success\">\r\n                              {this.state.buttonText}\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* #END# Widgets */}\r\n\r\n              <div className=\"row clearfix\"></div>\r\n            </div>\r\n          </section>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DoAlookup;\r\n","D:\\xampp\\htdocs\\property-app\\front-app\\src\\pages\\WorldTable .js",[],{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","severity":1,"message":"244","line":4,"column":8,"nodeType":"245","messageId":"246","endLine":4,"endColumn":23},{"ruleId":"247","severity":1,"message":"248","line":61,"column":84,"nodeType":"249","messageId":"250","endLine":61,"endColumn":86},{"ruleId":"251","severity":1,"message":"252","line":195,"column":17,"nodeType":"253","endLine":195,"endColumn":55},{"ruleId":"254","severity":1,"message":"255","line":13,"column":11,"nodeType":"253","endLine":13,"endColumn":40},{"ruleId":"256","severity":1,"message":"257","line":13,"column":19,"nodeType":"258","messageId":"259","endLine":13,"endColumn":39},{"ruleId":"251","severity":1,"message":"252","line":13,"column":40,"nodeType":"253","endLine":13,"endColumn":76},{"ruleId":"254","severity":1,"message":"255","line":16,"column":11,"nodeType":"253","endLine":16,"endColumn":73},{"ruleId":"256","severity":1,"message":"257","line":16,"column":19,"nodeType":"258","messageId":"259","endLine":16,"endColumn":39},{"ruleId":"254","severity":1,"message":"255","line":14,"column":15,"nodeType":"253","endLine":14,"endColumn":44},{"ruleId":"256","severity":1,"message":"257","line":14,"column":23,"nodeType":"258","messageId":"259","endLine":14,"endColumn":43},{"ruleId":"254","severity":1,"message":"255","line":15,"column":15,"nodeType":"253","endLine":15,"endColumn":44},{"ruleId":"256","severity":1,"message":"257","line":15,"column":23,"nodeType":"258","messageId":"259","endLine":15,"endColumn":43},{"ruleId":"254","severity":1,"message":"255","line":16,"column":15,"nodeType":"253","endLine":16,"endColumn":44},{"ruleId":"256","severity":1,"message":"257","line":16,"column":23,"nodeType":"258","messageId":"259","endLine":16,"endColumn":43},{"ruleId":"254","severity":1,"message":"255","line":17,"column":15,"nodeType":"253","endLine":17,"endColumn":44},{"ruleId":"256","severity":1,"message":"257","line":17,"column":23,"nodeType":"258","messageId":"259","endLine":17,"endColumn":43},{"ruleId":"254","severity":1,"message":"255","line":18,"column":15,"nodeType":"253","endLine":18,"endColumn":44},{"ruleId":"256","severity":1,"message":"257","line":18,"column":23,"nodeType":"258","messageId":"259","endLine":18,"endColumn":43},{"ruleId":"251","severity":1,"message":"260","line":13,"column":17,"nodeType":"253","endLine":13,"endColumn":57},{"ruleId":"239","replacedBy":"261"},{"ruleId":"241","replacedBy":"262"},{"ruleId":"243","severity":1,"message":"244","line":4,"column":8,"nodeType":"245","messageId":"246","endLine":4,"endColumn":23},{"ruleId":"247","severity":1,"message":"248","line":61,"column":84,"nodeType":"249","messageId":"250","endLine":61,"endColumn":86},{"ruleId":"251","severity":1,"message":"252","line":195,"column":17,"nodeType":"253","endLine":195,"endColumn":55},{"ruleId":"239","replacedBy":"263"},{"ruleId":"241","replacedBy":"264"},{"ruleId":"265","severity":1,"message":"266","line":9,"column":11,"nodeType":"253","endLine":15,"endColumn":13},{"ruleId":"254","severity":1,"message":"255","line":9,"column":11,"nodeType":"253","endLine":15,"endColumn":13},{"ruleId":"256","severity":1,"message":"257","line":10,"column":18,"nodeType":"258","messageId":"259","endLine":10,"endColumn":39},{"ruleId":"265","severity":1,"message":"266","line":16,"column":11,"nodeType":"253","endLine":16,"endColumn":60},{"ruleId":"254","severity":1,"message":"255","line":16,"column":11,"nodeType":"253","endLine":16,"endColumn":60},{"ruleId":"256","severity":1,"message":"257","line":16,"column":19,"nodeType":"258","messageId":"259","endLine":16,"endColumn":40},{"ruleId":"239","replacedBy":"267"},{"ruleId":"241","replacedBy":"268"},{"ruleId":"247","severity":1,"message":"248","line":51,"column":88,"nodeType":"249","messageId":"250","endLine":51,"endColumn":90},{"ruleId":"247","severity":1,"message":"269","line":75,"column":26,"nodeType":"249","messageId":"250","endLine":75,"endColumn":28},{"ruleId":"254","severity":1,"message":"255","line":138,"column":21,"nodeType":"253","endLine":138,"endColumn":51},{"ruleId":"256","severity":1,"message":"257","line":138,"column":29,"nodeType":"258","messageId":"259","endLine":138,"endColumn":50},{"ruleId":"254","severity":1,"message":"255","line":254,"column":72,"nodeType":"253","endLine":254,"endColumn":103},{"ruleId":"256","severity":1,"message":"257","line":254,"column":80,"nodeType":"258","messageId":"259","endLine":254,"endColumn":101},{"ruleId":"243","severity":1,"message":"270","line":6,"column":10,"nodeType":"245","messageId":"246","endLine":6,"endColumn":31},{"ruleId":"254","severity":1,"message":"255","line":120,"column":8,"nodeType":"253","endLine":120,"endColumn":37},{"ruleId":"256","severity":1,"message":"257","line":120,"column":16,"nodeType":"258","messageId":"259","endLine":120,"endColumn":36},{"ruleId":"254","severity":1,"message":"255","line":91,"column":17,"nodeType":"253","endLine":91,"endColumn":47},{"ruleId":"256","severity":1,"message":"257","line":91,"column":25,"nodeType":"258","messageId":"259","endLine":91,"endColumn":46},{"ruleId":"243","severity":1,"message":"271","line":2,"column":10,"nodeType":"245","messageId":"246","endLine":2,"endColumn":14},{"ruleId":"247","severity":1,"message":"269","line":46,"column":32,"nodeType":"249","messageId":"250","endLine":46,"endColumn":34},{"ruleId":"254","severity":1,"message":"255","line":98,"column":17,"nodeType":"253","endLine":98,"endColumn":47},{"ruleId":"256","severity":1,"message":"257","line":98,"column":25,"nodeType":"258","messageId":"259","endLine":98,"endColumn":46},{"ruleId":"243","severity":1,"message":"271","line":2,"column":10,"nodeType":"245","messageId":"246","endLine":2,"endColumn":14},{"ruleId":"254","severity":1,"message":"255","line":96,"column":11,"nodeType":"253","endLine":96,"endColumn":41},{"ruleId":"256","severity":1,"message":"257","line":96,"column":19,"nodeType":"258","messageId":"259","endLine":96,"endColumn":40},{"ruleId":"243","severity":1,"message":"272","line":3,"column":10,"nodeType":"245","messageId":"246","endLine":3,"endColumn":18},{"ruleId":"243","severity":1,"message":"270","line":6,"column":10,"nodeType":"245","messageId":"246","endLine":6,"endColumn":31},{"ruleId":"273","severity":1,"message":"274","line":65,"column":18,"nodeType":"275","messageId":"276","endLine":97,"endColumn":18},{"ruleId":"254","severity":1,"message":"255","line":117,"column":7,"nodeType":"253","endLine":117,"endColumn":36},{"ruleId":"256","severity":1,"message":"257","line":117,"column":15,"nodeType":"258","messageId":"259","endLine":117,"endColumn":35},{"ruleId":"243","severity":1,"message":"277","line":2,"column":20,"nodeType":"245","messageId":"246","endLine":2,"endColumn":31},{"ruleId":"278","severity":1,"message":"279","line":98,"column":6,"nodeType":"280","endLine":98,"endColumn":12,"suggestions":"281"},{"ruleId":"243","severity":1,"message":"271","line":2,"column":10,"nodeType":"245","messageId":"246","endLine":2,"endColumn":14},{"ruleId":"247","severity":1,"message":"269","line":50,"column":33,"nodeType":"249","messageId":"250","endLine":50,"endColumn":35},{"ruleId":"243","severity":1,"message":"271","line":2,"column":10,"nodeType":"245","messageId":"246","endLine":2,"endColumn":14},"no-native-reassign",["282"],"no-negated-in-lhs",["283"],"no-unused-vars","'SignatureCanvas' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","Invalid alt value for img. Use alt=\"\" for presentational images.",["282"],["283"],["282"],["283"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.",["282"],["283"],"Expected '!==' and instead saw '!='.","'NotificationContainer' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'createTheme' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUserList'. Either include it or remove the dependency array.","ArrayExpression",["284"],"no-global-assign","no-unsafe-negation",{"desc":"285","fix":"286"},"Update the dependencies array to be: [getUserList, page]",{"range":"287","text":"288"},[2278,2284],"[getUserList, page]"]